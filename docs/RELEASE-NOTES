June 15, 2020 - Korali 2.0.0

New Features / Enhancements

+  New Problems:
   - Supervised Learning
   - Reinforcement Learning
   - Integration
   - Bayesian (Latent Variables)
   
+ New Solvers: 
   - For Learning: Neural Network-based Learner and Gaussian Processes
   - For Sampling: Nested Sampling
   - For Bayesian Inference: SAEM
   - For Optimization: Grid Search
   - For Integration: Integrator

+ Improved error reporting. Korali will notify the cause of bad configuration (for users) or runtime errors and file from which they originated (for developers).

+ Korali can now automatically detect existing or download and install all its third party dependencies (GSL, oneDNN, EIGEN, libGP).

+ General performance optimizations, especially with regards to avoiding unnecessary data motion between JSON configuration and module internal variables.

+ Increased documentation coverage.

Breaking Changes

+ Samplers and Optimizers have been recategorized and applications using them should be adapted to the new syntax.
+ The behavior of loadState() has changed to require a filename as input. Korali now saves the latest generation as a symbolic link in the results folder. The syntax to use is now: loadState(resultFolder + '/latest').
+ Hierarchical Bayesian experiments do not accept file paths anymore, but instead experiments loaded by loadState().
+ Increased compiler requirement to support C++17.

Bug Fixes

+ General memory leaks fixes on creation of Korali modules and coroutines.
+ Removing many lingering compilation warnings.
+ General improvements to code styling.
+ Removed third-party code from Korali's repository as now they are gathered during installation.

---------------------------------------------------------------------

May 3, 2020 - Korali 1.0.4

New Features / Enhancements

+ New problem and solver modules.
+ Added the ability to run Korali-in-Korali experiments

Breaking Changes

+ The syntax to continue running the execution of experiments (either partially ran or loaded from a file) has changed to:

  e.resume(),

  and the behavior of e.run() has been changed to always start from the first generation. This change facilitates the re-run of experiments.

+ None

Bug Fixes

+ Fixed bug where, if not saving results to a file, they will not be accessible at runtime either.

---------------------------------------------------------------------

April 2, 2020 - Korali 1.0.3

New Features / Enhancements

+ Korali has now full documentation coverage.
+ Small fixes and improvements.

Breaking Changes

+ None

Bug Fixes

+ Fixed a bug in which results would not be saved if user configured the experiment not save result files.

---------------------------------------------------------------------
March 12, 2020 - Korali 1.0.2

New Features / Enhancements

+ Added Dynamic Programming problem and solver.
+ Simplified interface and module names.
+ Larger parts of the documentation pages are now auto-generated

Breaking Changes

+ Many solver and problem types have changed names or been simplified. Your Korali app would need to adapt to the new interface.

Bug Fixes

+ Fixed a problem when installing Korali under a custom python environment using the --user flag.

------------------------------------------------

February 6, 2020 - Korali 1.0.1

New Features / Enhancements

 + Korali stores now the internal state of its random number generators, such that restarting experiments will yield the same result as the same experiment ran in a single segment.

Breaking Changes
None.

Bug Fixes

+ General improvements to stability and precision.

------------------------------------------------

December 12, 2019 - Korali 1.0.0

New Features / Enhancements
None.

Breaking Changes
None.

Bug Fixes
None.
