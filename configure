# This file is subject to the license agreement located in the file LICENSE
# and cannot be distributed without it. This notice cannot be removed or modified. 
#!/bin/bash

VERSION=1.0

# Help display function
function print_help ()
{
 echo ""
 echo "---------------------------------------------------------------------"
 echo "| Korali - High-performance framework for optimization, sampling    |"
 echo "|          and Bayesian uncertainty quantification of large scale   |"
 echo "|          computational models.                                    |"
 echo "| Authors: Georgios Arampatzis, Sergio Martin, Daniel Waelchli      |"
 echo "|          CSELab - ETH Zurich - Prof. Koumoutsakos                 |"
 echo "---------------------------------------------------------------------"
 echo ""
 echo "Configuration syntax:"
 echo "./configure"
 echo "   [--prefix=INSTALL_DIR]"
 echo "   [--enable-upcxx]"
 echo "   [--enable-mpi]"
 echo ""
 echo "Where:"
 echo " INSTALL_DIR is the path where to install Korali."
 echo " --help Displays this help message."
}

USE_UPCXX=0
USE_MPI=0
PREFIX=$PWD/korali

for i in "$@"
do
case $i in
    --prefix=*)
    PREFIX="${i#*=}"
    shift 
    ;;
    --help)
    print_help
    exit 0 
    shift 
    ;;
    --enable-upcxx)
    USE_UPCXX=1
    shift 
    ;;
    --enable-mpi)
    USE_MPI=1
    shift 
    ;;
    *)
    print_help
    echo ""
    echo "[Korali] Error: Unknown option $i."       
    exit 1
    ;;
esac
done

######## Checking compiler ########

$CXX --version > /dev/null 2>&1
DETECTED_CXX=$?
c++ --version > /dev/null 2>&1
DETECTED_CPLUSPLUS=$?
g++ --version > /dev/null 2>&1
DETECTED_GXX=$?
clang++ --version > /dev/null 2>&1
DETECTED_CLANG=$?
icpc --version > /dev/null 2>&1
DETECTED_ICPC=$?
 
USE_CXX=""
if [ $DETECTED_CPLUSPLUS -eq 0 ]; then USE_CXX=c++;     fi;
if [ $DETECTED_GXX       -eq 0 ]; then USE_CXX=g++;     fi;
if [ $DETECTED_ICPC      -eq 0 ]; then USE_CXX=icpc;    fi;
if [ $DETECTED_CLANG     -eq 0 ]; then USE_CXX=clang++; fi;
if [ $DETECTED_CXX       -eq 0 ]; then USE_CXX=$CXX;    fi;

if [[ "$USE_CXX" == "" ]]
then
  echo "[Korali] Error: Did not found any valid C++ compiler. Please define \$CXX."
  exit -1
fi

######## Checking support for MPI ########

if [ $USE_MPI -eq 1 ]
then
 mpicxx --version > /dev/null 2>&1
 if [ ! $? -eq 0 ]
 then
  echo "[Korali] Error: No mpicxx command found."
  exit -1
 else
  echo "[Korali] Configuring with support for the MPI Conduit"
  USE_MPI=1
 fi
 echo "[Korali] Error: No valid C++ compiler defined in \$CXX"
 exit -1
else
 echo "[Korali] Using \$CXX=$USE_CXX as C++ compiler."
fi

######## Checking support for MPI ########

if [ $USE_MPI -eq 1 ]
then
 mpicxx --version > /dev/null 2>&1
 if [ ! $? -eq 0 ]
 then
  echo "[Korali] Error: No mpicxx command found."
  exit -1
 else
  echo "[Korali] Configuring with support for the MPI Conduit"
  USE_MPI=1
 fi
else
 echo "[Korali] Configuring without support for the MPI Conduit"
fi

######## Checking support for UPC++ ########

if [ $USE_UPCXX -eq 1 ]
then
 upcxx --version > /dev/null 2>&1
 if [ ! $? -eq 0 ]
 then
  echo "[Korali] Error: No upcxx command found for UPC++."
  exit -1
 else
  upcxx-meta CPPFLAGS > /dev/null 2>&1
  if [ ! $? -eq 0 ]
  then
   echo "[Korali] Error: No upcxx-meta command found for UPC++."
   exit -1
  else
   echo "[Korali] Configuring with support for the UPC++ Conduit."
   USE_UPCXX=1
  fi
 fi
else
 echo "[Korali] Configuring without support for the UPC++ Conduit."
fi

######## Checking support for POSIX Threads ########

$USE_CXX -v 2>&1 > /dev/null | grep posix > /dev/null 2>&1
if [ ! $? -eq 0 ]
then
 echo "[Korali] No compiler support for POSIX Threads found."
 USE_MULTITHREAD=0
else
 echo "[Korali] Configuring with support for the Multithreaded Conduit."
 USE_MULTITHREAD=1
fi

######## Checking support for Python3 ########

echo "[Korali] Checking for Python3 support using \"python3 --version\"."
python3 --version > /dev/null 2>&1
if [ $? -eq 0 ]; then
  pythonBin=`which python3`
  pythonPath=`dirname $pythonBin`
  pythonPath=`dirname $pythonPath`
  echo "[Korali] Python3 found at $pythonPath."
  pythonPkgConfigPath="$pythonPath/lib*/pkgconfig/python3.pc"
  echo "[Korali] Checking for Python3 package information: \"pkg-config $pythonPkgConfigPath\""
  pkg-config $pythonPkgConfigPath
  if [ $? -eq 0 ]; then
    pythonCFlags=`pkg-config $pythonPkgConfigPath --cflags`
    pythonLibs=`pkg-config $pythonPkgConfigPath --libs`
  else
    echo "[Korali] Error: $pythonPkgConfigPath not found."
    echo "[Korali] Please make sure python3 is correctly installed."
    exit
  fi
else
  echo "[Korali] Error: Python3 not found."
  echo "[Korali] Please make sure the python3 command is accesible from the $PATH environment variable."
  exit
fi

######## Creating Config File ########

echo "VERSION=$VERSION" > korali.config
echo "PREFIX=$PREFIX" >> korali.config
echo "PYTHONCFLAGS=$pythonCFlags" >> korali.config
echo "PYTHONLIBS=$pythonLibs" >> korali.config
echo "CXX=$USE_CXX" >> korali.config
echo "USE_MPI=$USE_MPI" >> korali.config
echo "USE_UPCXX=$USE_UPCXX" >> korali.config
echo "USE_MULTITHREAD=$USE_MULTITHREAD" >> korali.config


echo "[Korali] Configuration was successful (see: korali.config)."
echo "[Korali] Install Path: $PREFIX"
echo "[Korali] Run 'make install' to install Korali."
