version: 2.1

executors:
  ubuntu_openmpi_onednn:
    docker:
      - image: docker.io/cselab/ubuntu_openmpi_onednn:latest
      
  fedora_openmpi_onednn:
    docker:
      - image: docker.io/cselab/fedora_openmpi_onednn:latest
  
jobs:
  build:
    parameters:
      image:
        type: executor
      CC:
        type: string
        default: gcc
      CXX:
        type: string
        default: g++
      buildtype:
        type: string
        default: debugoptimized
      runTests:
        type: string
        default: 'true'
      runCoverage:
        type: string
        default: 'false'
      buildargs: 
        type: string
        default: "-Donednn_path=/usr/local -Dmpi=true"
    resource_class: xlarge
    executor: << parameters.image >>  
    working_directory: ~/korali
    steps:
      - checkout
      - run:
          name: config
          command: CC=<< parameters.CC >> CXX=<< parameters.CXX >> meson setup build --prefix=~/test_install << parameters.buildargs >> --buildtype=<< parameters.buildtype >> -Db_coverage=<< parameters.runCoverage >> -Dtest=<< parameters.runTests >>
      - run:
          name: build
          command: ninja -C build
      - run:
          name: test
          command: source tools/env/set_env.sh build; if [ "<< parameters.runTests >>" == "true" ]; then OMP_NUM_THREADS=2 meson test -C build; fi
      - run:
          name: install
          command: meson install -C build
      - run: 
          name: coverage
          command:  if [ "<< parameters.runCoverage >>" == "true" ]; then ninja -C build coverage && ./tools/coverage/coverage && ./tools/coverage/codecov -X search -X fix -f '*.gcov'; fi
      - store_artifacts:
          path: build/meson-logs

workflows:
  korali_release:
    jobs:
      - build:
          name: ubuntu_openmpi_gcc
          image: ubuntu_openmpi_onednn
          buildtype: release
          runCoverage: 'true'
      - build:
          name: fedora_openmpi_gcc
          image: fedora_openmpi_onednn
          buildtype: release
          runCoverage: 'true'
      - build:
          name: ubuntu_openmpi_clang
          image: ubuntu_openmpi_onednn
          buildtype: release
          runCoverage: 'true'
          CC: 'clang'
          CXX: 'clang++'
      - build:
          name: fedora_openmpi_clang
          image: fedora_openmpi_onednn
          buildtype: release
          runCoverage: 'true'