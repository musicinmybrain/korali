version: 2

workflows:
  version: 2
  build:
    jobs:
      - build_linux
      - build_macos

jobs:
  build_linux:
    docker:
      - image: circleci/python:latest
    working_directory: ~/korali
    steps:

      - checkout

      - run:
          name: install MPI
          command: sudo apt-get install mpich;
                   echo 'export MPICXX=mpicxx' >> $BASH_ENV

      - restore_cache:
          keys:
            - cache-linux-doxygen-v3
            
      - restore_cache:
          keys:
            - cache-linux-llvm-v3
            
      - restore_cache:
          keys:
            - cache-linux-cmake-v3
      
      - restore_cache:
          keys:
            - cache-linux-gsl-v3
            
      - restore_cache:
          keys:
            - cache-linux-oneDNN-v3
            
      - run:
          name: Install Doxygen
          command: ./prereqs/install_doxygen.sh
          
      - save_cache:
          key: cache-linux-doxygen-v3
          paths:
            - "~/korali/prereqs/_doxygen/install"
                  
      - run:
          name: Install LLVM (clang-format)
          command: ./prereqs/install_clang.sh
          
      - save_cache:
          key: cache-linux-llvm-v3
          paths:
            - "~/korali/prereqs/_llvm/install"
            
      - run:
          name: Install CMake
          command: ./prereqs/install_CMake.sh
          
      - save_cache:
          key: cache-linux-cmake-v3
          paths:
            - "~/korali/prereqs/CMake/install"

      - run:
          name: Install GSL
          command: ./prereqs/install_gsl.sh
          
      - save_cache:
          key: cache-linux-gsl-v3
          paths:
            - "~/korali/prereqs/GSL/install"
      
      - run:
          name: Install oneDNN
          command: ./prereqs/install_oneDNN.sh
          
      - save_cache:
          key: cache-linux-oneDNN-v3
          paths:
            - "~/korali/prereqs/oneDNN/install"
                                  
      - run:
          name: build Korali
          command: ./install --prereqs --jobs=8

      - run:
          name: run tests
          command: pushd tests; ./run_all_tests.sh; popd
      
      - store_artifacts:
          path: ~/korali/install.log

      - store_artifacts:
          path: ~/korali/docs/test.log

  build_macos:
    macos:
      xcode: "11.4.1"
    working_directory: ~/korali
    steps:

      - checkout

      - run:
          name: Install MacOS dependencies
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install wget;
                   HOMEBREW_NO_AUTO_UPDATE=1 brew install coreutils;
                   HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake;
                   HOMEBREW_NO_AUTO_UPDATE=1 brew install gsl;
   
      - restore_cache:
          keys:
            - cache-macos-doxygen-v3
            
      - restore_cache:
          keys:
            - cache-macos-llvm-v3
            
      - restore_cache:
          keys:
            - cache-macos-cmake-v3
           
      - restore_cache:
          keys:
            - cache-macos-gsl-v3
            
      - restore_cache:
          keys:
            - cache-macos-oneDNN-v3
            
      - run:
          name: Install Doxygen
          command: ./prereqs/install_doxygen.sh
          
      - save_cache:
          key: cache-macos-doxygen-v3
          paths:
            - "~/korali/prereqs/_doxygen/install"
                  
      - run:
          name: Install LLVM (clang-format)
          command: ./prereqs/install_clang.sh
          
      - save_cache:
          key: cache-macos-llvm-v3
          paths:
            - "~/korali/prereqs/_llvm/install"
            
      - run:
          name: Install CMake
          command: ./prereqs/install_CMake.sh 
          
      - save_cache:
          key: cache-macos-cmake-v3
          paths:
            - "~/korali/prereqs/CMake/install"

      - run:
          name: Install GSL
          command: ./prereqs/install_gsl.sh
          
      - save_cache:
          key: cache-macos-gsl-v3
          paths:
            - "~/korali/prereqs/GSL/install"
      
      - run:
          name: Install oneDNN
          command: ./prereqs/install_oneDNN.sh
          
      - save_cache:
          key: cache-macos-oneDNN-v3
          paths:
            - "~/korali/prereqs/oneDNN/install"
                            
      - run:
          name: build Korali
          command: ./install --prereqs --jobs=4

      - run:
          name: run tests
          command: pushd tests; ./run_all_tests.sh; popd

      - store_artifacts:
           path: ~/korali/install.log

      - store_artifacts:
          path: ~/korali/docs/test.log
