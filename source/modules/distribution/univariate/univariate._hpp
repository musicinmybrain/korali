#ifndef _KORALI_DISTRIBUTION_UNIVARIATEHPP_
#define _KORALI_DISTRIBUTION_UNIVARIATEHPP_

#include "modules/distribution/distribution.hpp"

namespace korali
{
namespace distribution
{
class Univariate : public korali::Distribution
{
  public:
  void initialize() override;

  /**
 * @brief Gets the probability density of the distribution at point x.
 * @param x point to evaluate P(x)
 * @return Value of the probability density.
 */
  virtual double getDensity(const double x) const = 0;

  /**
 * @brief Gets the Log probability density of the distribution at point x.
 * @param x point to evaluate log(P(x))
 * @return Log of probability density.
 */
  virtual double getLogDensity(const double x) const = 0;

  /**
  * @brief Draws and returns a random number from the distribution.
  * @return Random real number.
  */
  virtual double getRandomNumber() = 0;
};

} // namespace distribution
} // namespace korali

#endif // _KORALI_DISTRIBUTIONHPP_
