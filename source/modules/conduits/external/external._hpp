#ifndef _KORALI_CONDUIT_EXTERNAL_HPP_
#define _KORALI_CONDUIT_EXTERNAL_HPP_

#include "modules/conduits/base.hpp"
#include "auxiliars/json.hpp"
#include <sys/types.h>
#include <unistd.h>
#include <queue>
#include <vector>
#include <map>

namespace Korali { namespace Conduit {

class External : public Korali::Conduit::Base {

 private:

 public:

 std::vector<std::vector<int>> _pipeDescriptors;
 std::queue<int> _launcherQueue;

 std::map<int, size_t> _launcherIdToSamplerIdMap;
 std::map<int, pid_t> _launcherIdToProcessIdMap;
 std::map<pid_t, int> _processIdMapToLauncherIdMap;

 void requestEvaluation(double* sampleArray, size_t sampleId) override;
 void initialize() override;
 void checkProgress() override;
 bool checkTermination() override;

 std::string getType() override;

 // Serialization Methods
 void getConfiguration(nlohmann::json& js) override;
 void setConfiguration(nlohmann::json& js) override;
};
} } // namespace Korali::Conduit

#endif // _KORALI_CONDUIT_EXTERNAL_HPP_
