#ifndef _KORALI_SOLVER_DQN_HPP_
#define _KORALI_SOLVER_DQN_HPP_

#include "modules/problem/reinforcementLearning/reinforcementLearning.hpp"
#include "modules/solver/solver.hpp"

namespace korali
{
namespace solver
{
class DQN : public Solver
{
  public:
  /**
   * @brief Storage for the pointer to the learning problem
   */
  problem::ReinforcementLearning *_problem;

  /**
 * @brief Korali engine for supervised learning of Q
 */
  korali::Engine _QEngine;

  /**
 * @brief Korali experiment for supervised learning of Q
 */
  korali::Experiment _QExperiment;

  /**
  * @brief Runs a generation of the environment(s), running an action on each episode, and updating the policy.
  */
  void runGeneration() override;
  void setInitialConfiguration() override;
  void initialize() override;
};

} // namespace solver
} // namespace korali

#endif // _KORALI_SOLVER_DQN_HPP_
