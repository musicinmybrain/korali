{
 "Configuration Settings":
 [
  {
   "Name": [ "Discount Factor" ],
   "Type": "double",
   "Description": "Discount Factor for future states."
  },
  {
    "Name": [ "Critic Neural Network" ],
    "Type": "korali::NeuralNetwork*",
    "Description": "Indicates the configuration of the underlying neural network to use for the critic."
  },
  {
    "Name": [ "Actor Neural Network" ],
    "Type": "korali::NeuralNetwork*",
    "Description": "Indicates the configuration of the underlying neural network to use for the actor."
  },
  {
    "Name": [ "Critic Optimizer" ],
    "Type": "knlohmann::json",
    "Description": "Represents the state and configuration of the solver algorithm for the weights and biases of the critic NN."
  },
  {
    "Name": [ "Actor Optimizer" ],
    "Type": "knlohmann::json",
    "Description": "Represents the state and configuration of the solver algorithm for the weights and biases of the actor NN."
  },
  {
    "Name": [ "Mini Batch Size" ],
    "Type": "size_t",
    "Description": "The number of experiences to randomly select to train the neural network with."
  },
  {
    "Name": [ "Optimization Steps Per Generation" ],
    "Type": "size_t",
    "Description": "The number of optimization steps on the training Q estimator to perform between episode executions, before updating the actual Q estimator."
  },
  {
   "Name": [ "Batch Normalization", "Enabled" ],
   "Type": "bool",
   "Description": "Uses batch normalization on all of the layers of the NN to reduce the detrimental effects of divergence in number magnitudes."
  },
  {
   "Name": [ "Batch Normalization", "Correction Steps" ],
   "Type": "size_t",
   "Description": "How many mini-batches will be used to correct mean/variance bias."
  },
  {
    "Name": [ "Exploration Noise" ],
    "Type": "korali::distribution::univariate::Normal*",
    "Description": "Random number generator with a normal distribution to introduce noise to the action exploration."
  },
  {
    "Name": [ "Adoption Rate" ],
    "Type": "double",
    "Description": "Slows the adoption of the learned NN to prevent divergence."
  }
 ],
 
 "Results":
 [
 
 ],
 
  "Termination Criteria":
 [
  {
    "Name": [ "Max Optimization Steps" ],
    "Type": "size_t",
    "Criteria": "(_maxOptimizationSteps > 0) && (_optimizationStepCount >= _maxOptimizationSteps)",
    "Description": "The solver will stop when the given number of optimizations have been made to the learner."
  }
 ],

 "Variables Configuration":
 [

 ],

 "Internal Settings":
 [
  {
   "Name": [ "Cumulative Q Star" ],
   "Type": "double",
   "Description": "Sum of E(Q) among the experiences from all minibatches in this generation."
  },
  {
   "Name": [ "Average Q Star" ],
   "Type": "double",
   "Description": "Average E(Q) among the experiences from all minibatches in this generation."
  },
  {
   "Name": [ "Optimization Step Count" ],
   "Type": "size_t",
   "Description": "Keeps track of the number of optimization steps performed by the learner."
  }
 ],
 
 "Module Defaults":
 {
  "Actor Neural Network":   { "Type": "Neural Network" },
  "Critic Neural Network":   { "Type": "Neural Network" },
  
  "Discount Factor": 0.9,

  "Exploration Noise":
  {
   "Type": "Univariate/Normal",
   "Mean": 0.0
  },
  
  "Batch Normalization":
  {
   "Enabled": false,
   "Correction Steps": 128
  },
  
  "Adoption Rate": 0.0001,
  "Mini Batch Size": 32,
  "Optimization Steps Per Generation": 10
 },
 
 "Variable Defaults":
 {

 }
}
