#ifndef _KORALI_AGENT_DDPG_HPP_
#define _KORALI_AGENT_DDPG_HPP_

#include "modules/solver/agent/agent.hpp"

namespace korali
{
namespace solver
{
namespace agent
{
class DDPG : public Agent
{
  public:

  /**
   * @brief Variable to keep track of the current noise added to the action
   */
  std::vector<double> _currentActionNoises;
  std::vector<double> getTrainingAction(const std::vector<double> &state) override;
  std::vector<double> queryPolicy(const std::vector<double>& state) override;
  void updateHyperparameters(const knlohmann::json& hyperparameters) override;
  void updatePolicy() override;
  void printGenerationAfter() override;
  void initialize() override;
};

} // namespace agent
} // namespace solver
} // namespace korali

#endif // _KORALI_AGENT_DDPG_HPP_
