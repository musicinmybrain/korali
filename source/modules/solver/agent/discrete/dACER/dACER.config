{
 "Configuration Settings":
 [
  {
   "Name": [ "Discount Factor" ],
   "Type": "float",
   "Description": "Discount Factor for future rewards."
  },
  {
    "Name": [ "Normalization Batch Size" ],
    "Type": "size_t",
    "Description": "The batch size to use for normalization steps."
  },
  {
    "Name": [ "Off Policy Updates" ],
    "Type": "size_t",
    "Description": "The number of off-policy updates to perform, besides the obligatory on-policy update."
  },
  {
    "Name": [ "Critic", "Neural Network" ],
    "Type": "knlohmann::json",
    "Description": "Indicates the configuration of the underlying neural network to use for the critic."
  },
  {
    "Name": [ "Critic", "Optimizer" ],
    "Type": "knlohmann::json",
    "Description": "Represents the state and configuration of the solver algorithm for the weights and biases of the critic NN."
  },
  {
    "Name": [ "Policy", "Neural Network" ],
    "Type": "knlohmann::json",
    "Description": "Indicates the configuration of the underlying neural network to use for the policy."
  },
  {
    "Name": [ "Policy", "Optimizer" ],
    "Type": "knlohmann::json",
    "Description": "Represents the state and configuration of the optimizer for the weights and biases of the policy NN."
  },
  {
   "Name": [ "Policy", "Trust Region", "Adoption Rate" ],
   "Type": "float",
   "Description": "The rate at which the average policy (from which the trust region is drawn) is updated. p_avg = adoptionRate * p_avg + (1 - adoptionRate) * p_new."
  },
  {
    "Name": [ "Policy", "Trust Region", "Enabled" ],
    "Type": "bool",
    "Description": "Specified whether to restrict policy updates within a trust region around the average policy."
  },
  {
    "Name": [ "Policy", "Trust Region", "Divergence Constraint" ],
    "Type": "float",
    "Description": "The constraint on the KL divergence for the calculation and adjustment to the trust region."
  },
  {
   "Name": [ "Importance Weight Truncation" ],
   "Type": "float",
   "Description": "Maximum value (c) for the importance weight (to prevent it from exploding), before multiplying it by Lambda."
  }
 ],
 
 "Results":
 [
 
 ],
 
  "Termination Criteria":
 [

 ],

 "Variables Configuration":
 [
 
 ],

 "Internal Settings":
 [
  {
   "Name": [ "Policy", "Average Hyperparameters" ],
   "Type": "std::vector<float>",
   "Description": "Stores the average policy hyperparameters."
  },
  {
   "Name": [ "Policy", "Current Hyperparameters" ],
   "Type": "std::vector<float>",
   "Description": "Stores the current policy hyperparameters."
  }
 ],
 
 "Module Defaults":
 {
  "Policy":
  {
   "Trust Region":
    {
     "Enabled": true,
     "Adoption Rate": 0.99,
     "Divergence Constraint": 1.0
    }
  },
  
  "Importance Weight Truncation": 5.0
 },
 
 "Variable Defaults":
 {
 
 }
}
