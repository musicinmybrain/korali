{

 "Configuration Settings":
 [
  {
    "Name": [ "Experience Replay", "Start Size" ],
    "Type": "size_t",
    "Description": "The minimum number of experiences to gather before learning starts."
  },
  {
    "Name": [ "Experience Replay", "Maximum Size" ],
    "Type": "size_t",
    "Description": "The minimum number of experiences to accumulate before starting to forget."
  },
  {
    "Name": [ "Trajectory Size" ],
    "Type": "size_t",
    "Description": "The number of agent actions (experiences) to take and store between critic/policy updates."
  },
  {
    "Name": [ "Optimization Steps Per Trajectory" ],
    "Type": "size_t",
    "Description": "The number of optimization steps for each trajectory received."
  },
  {
   "Name": [ "Training Reward Threshold" ],
   "Type": "double",
   "Description": "Minimum value (r) of the episode's average training reward for a policy to be considered as candidate."
  },
  {
   "Name": [ "Policy Testing Episodes" ],
   "Type": "size_t",
   "Description": "Number of test episodes to run the policy (without noise) for, for which the average reward will serve to evaluate the reward termination criteria."
  },
  {
   "Name": [ "Normalization Steps" ],
   "Type": "size_t",
   "Description": "How many mini-batches will be used to correct mean/variance bias for batch normalized layers."
  }
 ],

 "Termination Criteria":
 [
  {
    "Name": [ "Max Episodes" ],
    "Type": "size_t",
    "Criteria": "(_maxEpisodes > 0) && (_currentEpisode >= _maxEpisodes)",
    "Description": "The solver will stop when the given number of environments have been fully executed."
  },
  {
    "Name": [ "Max Experiences" ],
    "Type": "size_t",
    "Criteria": "(_maxExperiences > 0) && (_experienceReplayHistory.size() >= _maxExperiences)",
    "Description": "The solver will stop when the given number of experiences have been gathered."
  },
  {
    "Name": [ "Target Average Testing Reward" ],
    "Type": "double",
    "Criteria": "(_targetAverageTestingReward > -korali::Inf) && (_bestAverageTestingReward >= _targetAverageTestingReward)",
    "Description": "The solver will stop when the given best average per-episode reward has been reached among the experiences between two learner updates."
  },
  {
    "Name": [ "Max Optimization Steps" ],
    "Type": "size_t",
    "Criteria": "(_maxOptimizationSteps > 0) && (_optimizationStepCount >= _maxOptimizationSteps)",
    "Description": "The solver will stop when the given number of optimizations have been made to the learner."
  }
 ],

 "Variables Configuration":
 [

 ],

 "Internal Settings":
 [
  {
    "Name": [ "Current Episode" ],
    "Type": "size_t",
    "Description": "Indicates the current episode being processed."
  },
  {
    "Name": [ "Experience Replay", "History" ],
    "Type": "std::vector<knlohmann::json>",
    "Description": "Stores experience replay history."
  },
  {
   "Name": [ "Current Reward" ],
   "Type": "double",
   "Description": "The cumulative reward for the current episode."
  },
  {
   "Name": [ "Current Experience Count" ],
   "Type": "size_t",
   "Description": "Number of experiences returned by the actor."
  },
  {
   "Name": [ "Current Trajectory Count" ],
   "Type": "size_t",
   "Description": "Number of trajectories produced by the actor."
  },
  {
    "Name": [ "Average Testing Reward" ],
    "Type": "double",
    "Description": "Remembers the current episode reward found on this generation's testing episodes, if any."
  },
  {
    "Name": [ "Best Training Reward" ],
    "Type": "double",
    "Description": "Remembers the cumulative average episode reward found so far from training episodes."
  },
  {
    "Name": [ "Candidate Policies Tested" ],
    "Type": "size_t",
    "Description": "Remembers the cumulative average episode reward found so far from testing episodes."
  },
  {
    "Name": [ "Best Average Testing Reward" ],
    "Type": "double",
    "Description": "Remembers the cumulative average episode reward found so far from testing episodes."
  },
  {
   "Name": [ "Hyperparameters" ],
   "Type": "knlohmann::json",
   "Description": "Stores the current policy configuration ."
  },
  {
   "Name": [ "Cumulative Q Star" ],
   "Type": "double",
   "Description": "Sum of E(Q) among the experiences from all minibatches in this generation."
  },
  {
   "Name": [ "Average Q Star" ],
   "Type": "double",
   "Description": "Average E(Q) among the experiences from all minibatches in this generation."
  },
  {
   "Name": [ "Optimization Step Count" ],
   "Type": "size_t",
   "Description": "Keeps track of the number of optimization steps performed by the learner."
  },
  {
   "Name": [ "Current Sample ID" ],
   "Type": "size_t",
   "Description": "Keeps track of the current Sample ID, to make sure no two equal sample IDs are produced and that this value can be used as random seed."
  }
 ],

 "Module Defaults":
 {
   "Termination Criteria":
   {
    "Max Episodes": 0,
    "Max Experiences": 0,
    "Max Optimization Steps": 0,
    "Target Average Testing Reward": -Infinity 
   },
   
  "Experience Replay":
   {
    "Maximum Size": 10000,
    "Start Size": 1000
   },
   
   "Policy Testing Episodes": 10,
   "Normalization Steps": 32
 },
 
 "Variable Defaults":
 {
 
 }
 
}
