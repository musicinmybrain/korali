{
 "Configuration Settings": 
 [
   {
    "Name": [ "Burn In" ],
    "Type": "size_t",
    "Description": "Specifies the number of preliminary HMC steps before samples are being drawn. This may reduce effects from improper initialization."
   },
   {
    "Name": [ "Use Diagonal Metric" ],
    "Type": "bool",
    "Description": "Specifies if Metric is restricted to be diagonal."
   },
   {
    "Name": [ "Num Integration Steps" ],
    "Type": "size_t",
    "Description": "Number of Integration steps used in Leapfrog scheme. Only relevant if Adaptive Step Size not used."
   },
   {
    "Name": [ "Max Integration Steps" ],
    "Type": "size_t",
    "Description": "Number of Integration steps used in Leapfrog scheme."
   },
   {
    "Name": [ "Use NUTS" ],
    "Type": "bool",
    "Description": "Specifies if No-U-Turn Sampler (NUTS) is used."
   },
   {
    "Name": [ "Step Size" ],
    "Type": "double",
    "Description": "Step size used in Leapfrog scheme."
   },
   {
    "Name": [ "Use Adaptive Step Size" ],
    "Type": "bool",
    "Description": "Controls whether dual averaging technique for Adaptive Step Size option is used."
   },
   {
    "Name": [ "Target Acceptance Rate" ],
    "Type": "double",
    "Description": "Desired Average Acceptance Rate used for Adaptive Step Size option."
   },
   {
    "Name": [ "Target Integration Time" ],
    "Type": "double",
    "Description": "Targeted Integration Time for Leapfrog scheme. Only relevant if Adaptive Step Size used."
   },
   {
    "Name": [ "Adaptive Step Size Speed Constant" ],
    "Type": "double",
    "Description": "Controls how fast the step size is adapted. Only relevant if Adaptive Step Size used."
   },
   {
    "Name": [ "Adaptive Step Size Stabilization Constant" ],
    "Type": "double",
    "Description": "Controls how stable adaptive step size is in the inital iterations. Only relevant if Adaptive Step Size used."
   },
   {
    "Name": [ "Adaptive Step Size Schedule Constant" ],
    "Type": "double",
    "Description": "Controls the weight of the previous step sizes. Only relevant if Adaptive Step Size used."
   },
   {
     "Name":[ "Max Depth" ],
     "Type": "size_t",
     "Description": "Sets the maximum depth of NUTS binary tree."
   }, 
   {
     "Name": [ "Version" ],
     "Type": "std::string",
     "Description": "Metric can be set to 'Static', 'Euclidean' or 'Riemannian'."
   },
   {
     "Name": [ "Inverse Regularization Parameter" ],
     "Type": "double",
     "Description": "Controls hardness of approximation: For large values the Inverse Metric is closer to Hessian (and therefore closer to degeneracy in certain cases)."
   },
   {
    "Name": [ "Max Num Fixed Point Iteration" ],
    "Type": "size_t",
    "Description": "Max Number of fixed point iterations during implicit leapfrog scheme."
   },
   {
     "Name": [ "Hamiltonian Verbosity" ],
     "Type": "bool",
     "Description": "Debugging"
   },
   {
     "Name": [ "Integrator Verbosity" ],
     "Type": "bool",
     "Description": "Debugging"
   },
   {
     "Name": [ "Step Size Jitter" ],
     "Type": "double",
     "Description": "Step Size Jitter to vary trajectory length. Number must be in the interval [0.0. 1.0]. A uniform realization between [-(Step Size Jitter) * (Step Size), (Step Size Jitter) * (Step Size)) is sampled and added to the current Step Size."
   },
   {
    "Name": [ "Initial Fast Adaption Interval" ],
    "Type": "size_t",
    "Description": "Initial warm-up interval during which step size is adaptively adjusted."
   },
   {
    "Name": [ "Final Fast Adaption Interval" ],
    "Type": "size_t",
    "Description": "Final warm-up interval during which step size is adaptively adjusted."
   },
   {
    "Name": [ "Initial Slow Adaption Interval" ],
    "Type": "size_t",
    "Description": "Width of first (out of 5) warm-up interval during which euclidean metric is adapted."
   }
 ],
 
 "Termination Criteria":
 [
   {
    "Name": [ "Max Samples" ],
    "Type": "size_t",
    "Criteria": "_sampleDatabase.size() >= _maxSamples",
    "Description": "Number of Samples to Generate."
   }   
 ]
 ,
 "Variables Configuration": 
 [
   {
    "Name": [ "Initial Mean" ],
    "Type": "double",
    "Description": "Specifies the Initial Mean of the proposal distribution."
   },
   {
    "Name": [ "Initial Standard Deviation" ],
    "Type": "double",
    "Description": "Specifies the Standard Deviation for each variable. The proposal distribution is defined through a covariance matrix with the variance of the variables in its diagonal."
   }
 ],
 
 "Internal Settings": 
 [
   {
    "Name": [ "Dimensions" ],
    "Type": "size_t",
    "Description": "Dimension of the state space."
   },
   {
    "Name": [ "Normal Generator" ],
    "Type": "korali::distribution::univariate::Normal*",
    "Description": "Normal random number generator."
   },
   {
    "Name": [ "Multivariate Generator" ],
    "Type": "korali::distribution::multivariate::Normal*",
    "Description": "Random number generator with a multivariate normal distribution."
   },
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator."
   },
   {
    "Name": [ "Acceptance Rate" ],
    "Type": "double",
    "Description": "Ratio proposed to accepted samples (including Burn In period)."
   },
   {
    "Name": [ "Acceptance Count" ],
    "Type": "size_t",
    "Description": "Number of accepted samples (including Burn In period)."
   },
   {
    "Name": [ "Proposed Sample Count" ],
    "Type": "size_t",
    "Description": "Number of proposed samples."
   },
   {
    "Name": [ "Sample Database" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Parameters generated by HMC and stored in the database."
   },
   {
    "Name": [ "Euclidean Warmup Sample Database" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Parameters generated during warmup. Used for Euclidean Metric approximation."
   },
   {
    "Name": [ "Chain Length" ],
    "Type": "size_t",
    "Description": "Current Chain Length (including Burn In and Leaped Samples)."
   },
   {
    "Name": [ "Leader Evaluation" ],
    "Type": "double",
    "Description": "Evaluation of leader."
   },
   {
    "Name": [ "Candidate Evaluation" ],
    "Type": "double",
    "Description": "Evaluation of candidate."
   },
   {
    "Name": [ "Position Leader" ],
    "Type": "std::vector<double>",
    "Description": "Variables of the newest position/sample in the Markov chain."
   },
   {
    "Name": [ "Position Candidate" ],
    "Type": "std::vector<double>",
    "Description": "Candidate position to be accepted or rejected."
   },
   {
    "Name": [ "Momentum Leader" ],
    "Type": "std::vector<double>",
    "Description": "Latest momentum sample."
   },
   {
    "Name": [ "Momentum Candidate" ],
    "Type": "std::vector<double>",
    "Description": "Proposed momentum after propagating Chain Leader and Momentum Leader according to Hamiltonian dynamics."
   },
   {
    "Name": [ "Position Mean" ],
    "Type": "std::vector<double>",
    "Description": "Mean of Markov Chain Position calculated from samples in Database. TODO:REPLACE Chain Mean."
   },
   {
    "Name": [ "Mu" ],
    "Type": "double",
    "Description": "Constant used for Adaptive Step Size option."
   }, 
   {
    "Name": [ "H Bar" ],
    "Type": "double",
    "Description": "Constant used for Adaptive Step Size option."
   }, 
   {
    "Name": [ "Dual Step Size" ],
    "Type": "double",
    "Description": "Smoothed average step size. Step size that is used after burn in period. Only relevant if adaptive step size used."
   },
   {
    "Name": [ "Acceptance Count NUTS" ],
    "Type": "double",
    "Description": "TODO: is this the number of accepted proposals?"
   }, 
   {
     "Name": [ "Acceptance Probability" ],
     "Type": "double",
     "Description": "Metropolis update acceptance probability - usually denoted with alpha - needed due to numerical error during integration."
   },
   {
    "Name": [ "Acceptance Rate Error" ],
    "Type": "double",
    "Description": "Accumulated differences of Acceptance Probability and Target Acceptance Rate."
   }
 ],
 
  "Module Defaults":
  {
   "Burn In":  900,
   "Use Diagonal Metric": true,
   "Step Size": 0.1,
   "Num Integration Steps": 10,
   "Max Integration Steps": 100,
   "Use Adaptive Step Size": true,
   "Dual Step Size": 1.0,
   "Target Acceptance Rate": 0.65,
   "Target Integration Time": 1.0,
   "Use NUTS": true,
   "Acceptance Count NUTS": 0.0,
   "Adaptive Step Size Speed Constant": 0.05,
   "Adaptive Step Size Stabilization Constant": 10.0, 
   "Adaptive Step Size Schedule Constant": 0.75,
   "Max Depth": 10,
   "Version": "Euclidean",
   "Inverse Regularization Parameter": 1.0,
   "Max Num Fixed Point Iteration": 8,
   "Hamiltonian Verbosity": false,
   "Integrator Verbosity": false,
   "Step Size Jitter": 0.0,
   "Initial Fast Adaption Interval": 75,
   "Final Fast Adaption Interval": 50,
   "Initial Slow Adaption Interval": 25,
   
   "Termination Criteria":
   {
    "Max Samples": 5000
   },
   
   "Uniform Generator":
   {
    "Type": "Univariate/Uniform",
    "Minimum": 0.0,
    "Maximum": 1.0
   },
    
   "Normal Generator":
   {
    "Type": "Univariate/Normal",
    "Mean": 0.0,
    "Standard Deviation": 1.0
   },

   "Multivariate Generator":
   {
    "Type": "Multivariate/Normal"
   }
  }
}
