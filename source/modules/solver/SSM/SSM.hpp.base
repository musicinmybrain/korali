#pragma once

#include "modules/distribution/univariate/uniform/uniform.hpp"
#include "modules/problem/reaction/reaction.hpp"
#include "modules/solver/solver.hpp"

__startNamespace__;

class __className__ : public __parentClassName__
{
  public:
  /**
   * @brief Storage for the pointer to the reaction problem
   */
  problem::Reaction *_problem;

  /**
   * @brief Resets the initial conditions of a new trajectory simulation.
   * @param numReactants initial reactants for new simulation
   * @param time starting time of new simulation
   */
  void reset(std::vector<int> numReactants, double time = 0.);

  /**
   * @brief Simulates a trajectory for all reactants based on provided reactions.
   */
  virtual void advance() = 0;

  /**
   * @brief Updates the values of the binned trajectories for each reactant.
   */
  void updateBins();

  void setInitialConfiguration();
  void runGeneration() override;
  void printGenerationBefore() override;
  void printGenerationAfter() override;
  void finalize() override;
};

__endNamespace__;
