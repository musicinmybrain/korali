{

 "Configuration Settings":
 [
   { 
    "Name": [ "Operation" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Train", "Description": "Perform the training process." },
                { "Value": "Forward", "Description": "Uses the training information to forward a new set of inputs and get their corresponding outputs." }
               ],
    "Description": "Indicates the type of learning stage to run."
   },
   { 
    "Name": [ "Training Set Input" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Provides the set of inputs to be used on training. It should contain N vectors of size K, where N is the training batch size, and K is the number of input nodes."
   },
   { 
    "Name": [ "Training Set Output" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "Provides the set of inputs to be used on training. It should contain N vectors of size K, where N is the training batch size, and K is the number of output nodes."
   },
   { 
    "Name": [ "Loss Function" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Mean Squared Error", "Description": "Measures the average of the squares of the errors. That is, the average squared difference between the estimated values and the actual value." }
               ],
    "Description": "Function to use for loss estimation."
   },
   { 
    "Name": [ "Engine Kind" ],
    "Type": "std::string",
    "Options": [
                { "Value": "CPU", "Description": "Uses the host CPU processor." },
                { "Value": "GPU", "Description": "Uses the host GPU device." }
               ],
    "Description": "Indicates which processor to use for NN operations."
   },
   { 
    "Name": [ "Optimizer" ],
    "Type": "std::string",
    "Options": [
                { "Value": "CMAES", "Description": "Uses the CMAES algorithm." },
                { "Value": "ADAM", "Description": "Uses the ADAM algorithm." }
               ],
    "Description": "Indicates the optimizer algorithm to use to optimize the NN's weights."
   },
   { 
    "Name": [ "Weight Initialization" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Zero", "Description": "All weights are initialized to zero." },
                { "Value": "Xavier", "Description": "Uses the Xavier initialization function." }
               ],
    "Description": "Indicates the method to use to initialize the NN's weights."
   },
   {
    "Name": [ "Layers" ],
    "Type": "std::vector<korali::Layer*>",
    "Description": "Complete description of the NN's layers."
   }
 ],

 "Termination Criteria":
 [

 ],

 "Variables Configuration":
 [

 ],
 
 "Internal Settings":
 [
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator."
   }
 ],
 
 "Module Defaults":
 {
    "Uniform Generator":
    {
     "Type": "Univariate/Uniform",
     "Minimum": -1.0,
     "Maximum": 1.0
    }
 },
 
 "Variable Defaults":
 {
 
 }
}
