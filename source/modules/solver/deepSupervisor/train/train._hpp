#ifndef _KORALI_SOLVER_DEEPSUPERVISOR_TRAIN_HPP_
#define _KORALI_SOLVER_DEEPSUPERVISOR_TRAIN_HPP_

#include "engine.hpp"
#include "modules/experiment/experiment.hpp"
#include "modules/neuralNetwork/neuralNetwork.hpp"
#include "modules/solver/deepSupervisor/deepSupervisor.hpp"

namespace korali
{
namespace solver
{
namespace deepSupervisor
{
class Train : public korali::solver::DeepSupervisor
{
  public:

 /**
 * @brief Korali engine for optimizing NN weights and biases
 */
 korali::problem::SupervisedLearning *_problem;

 std::vector<std::vector<double>> test(const std::vector<std::vector<double>>& inputBatch);

  void initialize() override;
  void runGeneration() override;
};
} // namespace deepSupervisor
} // namespace solver
} // namespace korali

#endif // _KORALI_SOLVER_DEEPSUPERVISOR_TRAIN_HPP_
