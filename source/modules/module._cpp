#include "module.hpp"

knlohmann::json korali::__profiler;
std::chrono::time_point<std::chrono::high_resolution_clock> korali::_startTime;
std::chrono::time_point<std::chrono::high_resolution_clock> korali::_endTime;
double korali::_cumulativeTime;

// Module Include List

korali::Module *korali::Module::getModule(knlohmann::json &js)
{
  std::string moduleType = "Undefined";

  if (!korali::JsonInterface::isDefined(js, "['Type']")) _k->_logger->logError("No module type provided.\n");

  moduleType = js["Type"].get<std::string>();
  moduleType.erase(remove_if(moduleType.begin(), moduleType.end(), isspace), moduleType.end());

  korali::JsonInterface::eraseValue(js, "['Type']");

  korali::Module *module = nullptr;

  // Module Selection List

  if (module == nullptr) _k->_logger->logError("Unrecognized module: %s.\n", moduleType.c_str());

  module->_k = _k;
  module->applyVariableDefaults();
  module->applyModuleDefaults(js);
  module->setConfiguration(js);
  module->initialize();

  return module;
}
