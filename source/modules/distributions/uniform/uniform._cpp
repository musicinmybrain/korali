#include "modules/distributions/uniform/uniform.hpp"

double Korali::Distribution::Uniform::getDensity(double x)
{
  if( _maximum-_minimum <= 0.0 ) return Korali::NaN;
  return gsl_ran_flat_pdf(x, _minimum, _maximum);
}

double Korali::Distribution::Uniform::getLogDensity(double x)
{
  if( _maximum-_minimum <= 0.0 ) return Korali::NaN;

  if (x >= _minimum && x <= _maximum) return _aux;
  return -Korali::Inf;
}

double Korali::Distribution::Uniform::getRandomNumber()
{
  if( _maximum-_minimum <= 0.0 )
    Korali::logError("Maximum (%f) bound must be higher than Minimum (%f) bound in a Uniform distribution in order to draw a random number.\n", _maximum, _minimum);

  return gsl_ran_flat(_range, _minimum, _maximum);
}

void Korali::Distribution::Uniform::updateDistribution()
{
  if (_maximum-_minimum <= 0.0) _aux = Korali::NaN ;
  else  _aux = -gsl_sf_log(_maximum-_minimum);
}
