{

 "Configuration Settings":
 [
   { 
    "Name": [ "Engine Kind" ],
    "Type": "std::string",
    "Options": [
                { "Value": "CPU", "Description": "Uses the host CPU processor." },
                { "Value": "GPU", "Description": "Uses the host GPU device." }
               ],
    "Description": "Indicates which processor to use for NN operations."
   },
   { 
    "Name": [ "Operation" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Training", "Description": "Forward propagate keeping intermediate working structures to accelerate backward propagation. Perform backward propagation and produce gradients for the weights and biases." },
                { "Value": "Inference", "Description": "Forward propagate only, keeping no intermediate data for gradient calculation. Do not execute backward propagation." }
               ],
    "Description": "Indicates how the NN will approach forward propagation and whether it will perform backward propagation."
   },
   { 
    "Name": [ "Weight Initialization" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Zero", "Description": "All weights are initialized to zero." },
                { "Value": "Xavier", "Description": "Uses the Xavier initialization function." }
               ],
    "Description": "Indicates the method to use to initialize the NN's weights."
   },
   {
    "Name": [ "Layers" ],
    "Type": "std::vector<korali::Layer*>",
    "Description": "Complete description of the NN's layers."
   },
   {
    "Name": [ "Solution" ],
    "Type": "std::vector<std::vector<double>>",
    "Description": "The actual solution data for trainin/validation, to compare to the NN outputs."
   },
   {
    "Name": [ "Batch Normalization",  "Enabled" ],
    "Type": "bool",
    "Description": "Defines whether to perform batch input normalization."
   },
   {
    "Name": [ "Batch Normalization",  "Shift" ],
    "Type": "std::vector<double>",
    "Description": "How much the values of the input batch should be shifted during normalization."
   },
   {
    "Name": [ "Batch Normalization",  "Scale" ],
    "Type": "std::vector<double>",
    "Description": "How much the values of the input batch should be scaled during normalization."
   },
   {
    "Name": [ "Batch Normalization", "Epsilon" ],
    "Type": "double",
    "Description": "Epsilon is a constant to improve numerical stability during normalization."
   },
   {
    "Name": [ "Optimizer" ],
    "Type": "knlohmann::json",
    "Description": "Represents the state and configuration of the solver algorithm."
   }
 ],

 "Internal Settings": 
 [
   {
    "Name": [ "Validation Parameters" ],
    "Type": "std::vector<double>",
    "Description": "Sample parameters to be used for the validation phase."
   },
   {
    "Name": [ "Current Training Loss" ],
    "Type": "double",
    "Description": "Current value of the training loss."
   }
 ],
 
 "Module Defaults":
 { 
    "Engine Kind": "CPU",
    "Solution": [],
    "Weight Initialization": "Xavier",
    "Operation": "Training",
    "Batch Normalization":
    {
     "Enabled": false,
     "Shift": [],
     "Scale": [],
     "Epsilon": 1e-10
    }
 }
 
}
