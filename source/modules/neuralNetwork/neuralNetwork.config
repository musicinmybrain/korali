{

 "Configuration Settings":
 [
   {
    "Name": [ "Engine" ],
    "Type": "std::string", 
    "Options": [
            { "Value": "Korali", "Description": "Uses Korali's lightweight NN support. (CPU Sequential - Does not require installing third party software other than Eigen)" },
            { "Value": "OneDNN", "Description": "Distributes Mu values equally. (CPU Sequential/Parallel - Requires installing oneDNN)" },
            { "Value": "CUDNN", "Description": "Distributes Mu values logarithmically. (GPU - Requires an existing installation of CUDNN)" }
           ],
    "Description": "Specifies which Neural Network backend engine to use."
   },
   {
    "Name": [ "Layers" ],
    "Type": "std::vector<korali::neuralNetwork::Layer*>", 
    "Description": "Complete description of the NN's layers."
   }

 ],

 "Internal Settings": 
 [
   {
    "Name": [ "Current Training Loss" ],
    "Type": "float",
    "Description": "Current value of the training loss."
   },
   {  
    "Name": [ "Output", "Values" ],
    "Type": "std::vector<std::vector<float>>",
    "Description": "Stores all the values of the NN output batch."
   },
   {
    "Name": [ "Uniform Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator for setting the initial value of the weights and biases."
   },
   {
    "Name": [ "Batch Size" ],
    "Type": "size_t",
    "Description": "Remembers the number of input sets will provided as input batch."
   }
 ],
 
 "Module Defaults": 
 { 
    "Engine": "Korali",
    "Input Values": [ ],
    "Uniform Generator":
    {
     "Type": "Univariate/Uniform",
     "Minimum": -1.0,
     "Maximum": 1.0
    }
    
 }
 
}
