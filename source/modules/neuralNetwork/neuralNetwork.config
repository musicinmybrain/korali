{

 "Configuration Settings":
 [
   {
    "Name": [ "Layers" ],
    "Type": "std::vector<korali::neuralNetwork::Layer*>", 
    "Description": "Complete description of the NN's layers."
   },
   {
    "Name": [ "Output", "Scale" ],
    "Type": "std::vector<float>", 
    "Description": "Gives a scaling factor for each of the output values of the NN."
   },
   {
    "Name": [ "Output", "Shift" ],
    "Type": "std::vector<float>", 
    "Description": "Shifts the output of the NN by the values given."
   },
   {
    "Name": [ "Output", "Absolute Mask" ],
    "Type": "std::vector<bool>", 
    "Description": "Indicates which output values (x) should be applied an absolute (|x|) operation."
   },
   {
    "Name": [ "Output", "Tanh Mask" ],
    "Type": "std::vector<bool>", 
    "Description": "Indicates which output values (x) should be applied a hyperbolic tangent (tanh(x)) operation."
   },
   {
    "Name": [ "Output", "Softplus Mask" ],
    "Type": "std::vector<bool>", 
    "Description": "Indicates which output values (x) should be applied a softmax (0.5*(x+sqrt(1+x*x))) operation."
   }
 ],

 "Internal Settings": 
 [
   {
    "Name": [ "Current Training Loss" ],
    "Type": "float",
    "Description": "Current value of the training loss."
   },
   {  
    "Name": [ "Output", "Values" ],
    "Type": "std::vector<std::vector<float>>",
    "Description": "Stores a the values of the NN output batch."
   },
   {  
    "Name": [ "Output", "Sign" ],
    "Type": "std::vector<std::vector<bool>>",
    "Description": "Stores a the sign of the NN's output batch."
   },
   {
    "Name": [ "Xavier Generator" ],
    "Type": "korali::distribution::univariate::Uniform*",
    "Description": "Uniform random number generator for setting the initial value of the weights and biases based on the Xavier algorithm."
   },
   {
    "Name": [ "Batch Size" ],
    "Type": "size_t",
    "Description": "Remembers the number of input sets will provided as input batch."
   }
 ],
 
 "Module Defaults": 
 { 
    "Input Values": [ ],
    "Xavier Generator":
    {
     "Type": "Univariate/Uniform",
     "Minimum": -1.0,
     "Maximum": 1.0
    },
    
   "Output":
   {
    "Scale": [ ],
    "Shift": [ ],
    "Absolute Mask": [ ],
    "Tanh Mask": [ ],
    "Softplus Mask": [ ]
   }
 }
 
}
