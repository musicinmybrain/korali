#include "modules/problems/direct/sampling/sampling.hpp"

void Korali::Problem::Direct::Sampling::initialize()
{
 if (_variables.size() == 0) Korali::logError("Sampling problems require at least one variable.\n");
}

void Korali::Problem::Direct::Sampling::runModel(std::vector<double> target, size_t targetId)
{
 // Creating model data.
  _modelData.setSample(targetId, target);

  // Executing Model
  _objectiveFunction(_modelData);
}

double Korali::Problem::Direct::Sampling::evaluateTarget()
{
 size_t resultSize = _modelData.getResultsSize();
 if (resultSize != 0) Korali::logError("Sampling problems require exactly 1 result. Provided: %lu.\n", resultSize);
 return _modelData.getResults()[0];
}
