@startIncludeGuard

#include "modules/problem/hierarchical/hierarchical.hpp"
#include "modules/problem/hierarchical/psi/psi.hpp"

@startNamespace

class @className : public @parentClassName
{
  private:
  /**
   * @brief Stores the actual Korali object for the psi experiment
   */
  korali::Experiment _psiExperimentObject;

  /**
  * @brief Stores the number of samples in the Psi problem experiment to use as input
  */
  size_t _psiProblemSampleCount;

  /**
   * @brief Stores the sample coordinates of the Psi Problem
   */
  std::vector<std::vector<double>> _psiProblemSampleCoordinates;

  /**
 * @brief Stores the sample logLikelihoods of the Psi Problem
 */
  std::vector<double> _psiProblemSampleLogLikelihoods;

  /**
  * @brief Stores the sample logPriors of the Psi Problem
  */
  std::vector<double> _psiProblemSampleLogPriors;

  public:
  void evaluateLogLikelihood(korali::Sample &sample) override;

  /**
 * @brief Evaluates the theta log likelihood of the given sample.
 * @param sample A Korali Sample
 */
  void evaluateThetaLikelihood(korali::Sample &sample);
  void initialize() override;
};

@endNamespace

@endIncludeGuard