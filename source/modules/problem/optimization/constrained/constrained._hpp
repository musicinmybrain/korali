#ifndef _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_
#define _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_

#include "modules/problem/optimization/optimization.hpp"

namespace korali { namespace problem { namespace optimization {

class Constrained : public korali::problem::Optimization
{
 private:

 public:
  void evaluate(korali::Sample&);

  /**
    * @brief Evaluates whether at least one of constraints have been met.
    * @param sample A Korali Sample
   */
  void evaluateConstraints(korali::Sample&);

};

} } } // namespace korali::problem::Optimization


#endif // _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_
