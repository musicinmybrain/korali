#ifndef _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_
#define _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_

#include "modules/problem/optimization/optimization.hpp"

namespace korali
{
namespace problem
{
namespace optimization
{
class Constrained : public korali::problem::Optimization
{
  private:
  public:
  /**
   * @brief Evaluates the F(x) of a sample, given a set of parameters and constraints.
   * @param sample A sample to process
   */
  void evaluate(korali::Sample &);

  /**
    * @brief Evaluates whether at least one of constraints have been met.
    * @param sample A Korali Sample
   */
  void evaluateConstraints(korali::Sample &sample);
};

} // namespace optimization
} // namespace problem
} // namespace korali

#endif // _KORALI_PROBLEM_OPTIMIZATION_CONSTRAINED_HPP_
