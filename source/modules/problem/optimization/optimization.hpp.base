__startIncludeGuard__;

#include "modules/problem/problem.hpp"

__startNamespace__;

class __className__ : public __parentClassName__
{
  private:
  public:
  void initialize() override;

  /**
  * @brief Evaluates a single objective, given a set of parameters.
  * @param sample A sample to process
  */
  void evaluate(korali::Sample &sample);

  /**
  * @brief Evaluates multiple objectives, given a set of parameters.
  * @param sample A sample to process
  */
  void evaluateMultiple(korali::Sample &sample);

  /**
    * @brief Evaluates whether at least one of constraints have been met.
    * @param sample A Korali Sample
   */
  void evaluateConstraints(korali::Sample &sample);

  /**
   * @brief Evaluates the F(x) and Gradient(x) of a sample, given a set of parameters.
   * @param sample A sample to process
   */
  void evaluateWithGradients(korali::Sample &sample);
};

__endNamespace__;

__endIncludeGuard__;