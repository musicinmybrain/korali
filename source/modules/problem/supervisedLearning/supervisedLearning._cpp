#include "modules/problem/supervisedLearning/supervisedLearning.hpp"

namespace korali
{
namespace problem
{
void SupervisedLearning::initialize()
{
  // Checking training/validation inputs
  _trainingBatchSize = _trainingInput.size();

  if (_trainingBatchSize == 0)
      KORALI_LOG_ERROR("Empty testing set provided.\n");

  if (_trainingBatchSize != _trainingSolution.size())
      KORALI_LOG_ERROR("Batch size of training solution (%lu) is different than that of training input (%lu).\n", _trainingSolution.size(), _trainingBatchSize);

  _validationBatchSize = _validationInput.size();

  if (_validationBatchSize != _validationSolution.size())
    KORALI_LOG_ERROR("Batch size of validation solution (%lu) is different than that of validation input (%lu).\n", _validationSolution.size(), _validationBatchSize);

  _inputVectorSize = _trainingInput[0].size();
  _solutionVectorSize = _trainingSolution[0].size();

  // Checking that all batch entries have the correct size
  for (size_t i = 0; i < _trainingInput.size(); i++)
   if (_trainingInput[i].size() != _inputVectorSize)
    KORALI_LOG_ERROR("Vector size of training input %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _trainingInput[i].size(), _inputVectorSize);

  for (size_t i = 0; i < _trainingSolution.size(); i++)
   if (_trainingSolution[i].size() != _solutionVectorSize)
    KORALI_LOG_ERROR("Vector size of training solution %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _trainingSolution[i].size(), _solutionVectorSize);

  for (size_t i = 0; i < _validationInput.size(); i++)
   if (_validationInput[i].size() != _inputVectorSize)
    KORALI_LOG_ERROR("Vector size of validation input %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _validationInput[i].size(), _inputVectorSize);

  for (size_t i = 0; i < _validationSolution.size(); i++)
   if (_validationSolution[i].size() != _solutionVectorSize)
    KORALI_LOG_ERROR("Vector size of validation solution %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _validationSolution[i].size(), _solutionVectorSize);
}

} // namespace problem

} // namespace korali
