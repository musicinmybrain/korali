#include "modules/problem/supervisedLearning/supervisedLearning.hpp"

namespace korali
{
namespace problem
{
void SupervisedLearning::initialize()
{
  // Checking training/validation inputs
  _batchSize = _inputs.size();

  if (_batchSize == 0)
    KORALI_LOG_ERROR("Empty input batch provided.\n");

  _inputVectorSize = _inputs[0].size();

  // Checking that all batch entries have the correct size
  for (size_t i = 0; i < _inputs.size(); i++)
    if (_inputs[i].size() != _inputVectorSize)
      KORALI_LOG_ERROR("Vector size of input data %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _inputs[i].size(), _inputVectorSize);

  _solutionVectorSize = _solution[0].size();

  if (_batchSize != _solution.size())
    KORALI_LOG_ERROR("Batch size of output data (%lu) is different than that of input data (%lu).\n", _solution.size(), _batchSize);

  for (size_t i = 0; i < _solution.size(); i++)
    if (_solution[i].size() != _solutionVectorSize)
      KORALI_LOG_ERROR("Vector size of training solution %lu is inconsistent. Size: %lu - Expected: %lu.\n", i, _solution[i].size(), _solutionVectorSize);
}

} // namespace problem

} // namespace korali
