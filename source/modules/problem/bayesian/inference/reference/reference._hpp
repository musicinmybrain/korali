#ifndef _KORALI_PROBLEM_BAYESIAN_REFERENCE_HPP_
#define _KORALI_PROBLEM_BAYESIAN_REFERENCE_HPP_

#include "modules/problem/bayesian/inference/inference.hpp"
#include <vector>

namespace korali { namespace problem { namespace bayesian { namespace inference {

class Reference : public korali::problem::bayesian::Inference
{
 private:

 double compute_sse( std::vector<double> x, std::vector<double> y );

 void loglikelihoodNormalAdditive(korali::Sample& sample);
 void loglikelihoodNormalAdditiveVariance(korali::Sample& sample);
 void loglikelihoodNormalMultiplicative(korali::Sample& sample);
 void loglikelihoodNormalMultiplicativeData(korali::Sample& sample);

 public:

 void evaluateLogLikelihood(korali::Sample& sample) override;
 void initialize() override;
};

} } } } // namespace korali::problem::bayesian::inference


#endif // _KORALI_PROBLEM_BAYESIAN_REFERENCE_HPP_
