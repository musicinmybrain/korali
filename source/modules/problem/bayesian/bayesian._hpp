#ifndef _KORALI_PROBLEM_BAYESIAN_HPP_
#define _KORALI_PROBLEM_BAYESIAN_HPP_

#include "modules/problem/problem.hpp"

namespace korali
{
namespace problem
{
class Bayesian : public korali::Problem
{
  private:
  public:
  void initialize() override;

  /**
   * @brief Produces a generic evaluation from the Posterior distribution of the sample, for optimization with CMAES, DEA, storing it in and stores it in sample["F(x)"].
   * @param sample A Korali Sample
  */
  virtual void evaluate(korali::Sample &sample);

  /**
  * @brief Evaluates the log prior of the given sample, and stores it in sample["Log Prior"]
  * @param sample A Korali Sample
  */
  void evaluateLogPrior(korali::Sample &sample);

  /**
 * @brief Evaluates the log likelihood of the given sample, and stores it in sample["Log Likelihood"]
 * @param sample A Korali Sample
 */
  virtual void evaluateLoglikelihood(korali::Sample &sample) = 0;

  /**
 * @brief Evaluates the log posterior of the given sample, and stores it in sample["Log Posterior"]
 * @param sample A Korali Sample
 */
  void evaluateLogPosterior(korali::Sample &sample);

  /**
 * @brief Evaluates the gradient of the objective w.r.t. to the variables, and stores it in sample["Gradient"]
 * @param sample A Korali Sample
 */
  virtual void evaluateGradient(korali::Sample &sample);

  /**
 * @brief Evaluates the gradient of the logLikelikood w.r.t. to the variables, and stores it in sample["Log Likelihood Gradient"]
 * @param sample A Korali Sample
 */
  virtual void evaluateLoglikelihoodGradient(korali::Sample &sample) { KORALI_LOG_ERROR("Gradient not yet implemented for selected Bayesian problem and log likelihood model."); }

  /**
 * @brief Evaluates the empirical Fisher information.
 * @param sample A Korali Sample
 */
  virtual void evaluateFisherInformation(korali::Sample &sample) { KORALI_LOG_ERROR("Fisher information not yet implemented for selected Bayesian problem and log likelihood model."); }
};

} // namespace problem
} // namespace korali

#endif // _KORALI_PROBLEM_BAYESIAN_HPP_
