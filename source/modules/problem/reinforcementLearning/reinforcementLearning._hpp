#ifndef _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_
#define _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_

#include "modules/neuralNetwork/neuralNetwork.hpp"
#include "modules/distribution/univariate/uniform/uniform.hpp"
#include "modules/problem/problem.hpp"

namespace korali
{

namespace solver { class Agent; }

namespace problem
{
class ReinforcementLearning : public korali::Problem
{
  public:
  void initialize() override;

  /**
   * @brief Pointer to the policy-generating agent
   */
  solver::Agent *_agent;

  /**
   * @brief Runs an episode of the agent within the environment
   * @param sample Sample containing current agent/state information.
   */
  void runEpisode(korali::Sample &sample);

};

} // namespace problem
} // namespace korali

#endif // _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_
