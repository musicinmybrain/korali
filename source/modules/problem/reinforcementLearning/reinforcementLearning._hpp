#ifndef _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_
#define _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_

#include "modules/neuralNetwork/neuralNetwork.hpp"
#include "modules/problem/problem.hpp"

namespace korali
{
namespace problem
{
class ReinforcementLearning : public korali::Problem
{
  public:
  void initialize() override;

  /**
   * @brief Runs an episode of the agent within the environment
   * @param sample Sample containing current agent/state information.
   */
  void runEpisode(korali::Sample &sample);


  /**
   * @brief Provides a uniformly random action within the action space
   * @param sample Sample on which the action and metadata will be stored
   */
  virtual void getRandomAction(korali::Sample &sample) = 0;
};

} // namespace problem
} // namespace korali

#endif // _KORALI_PROBLEM_REINFORCEMENT_LEARNING_HPP_
