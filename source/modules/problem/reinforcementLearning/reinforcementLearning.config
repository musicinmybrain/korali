{
 "Configuration Settings":
 [
   { 
    "Name": [ "Operation" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Training", "Description": "Perform the training process." },
                { "Value": "Running", "Description": "Uses the training information to run an environment with the best expected policy." }
               ],
    "Description": "Indicates the type of learning stage to run."
   },
   {
    "Name": [ "Environment Function" ],
    "Type": "std::function<void(korali::Sample&)>",
    "Description": "Function to initialize and run a new environment."
   },
   { 
    "Name": [ "Initial State" ],
    "Type": "std::vector<double>",
    "Description": "Indicates the starting state for the running stage."
   }
 ],

 "Available Operations":
 [
  {
    "Name": "Run Environment",
    "Description": "Runs the environment, receives the state and rewards and provides actions.",
    "Function": "runEnvironment"
  }
 ],
 
 "Compatible Solvers": [  ],
 
 "Variables Configuration":
 [
   { 
    "Name": [ "Type" ],
    "Type": "std::string",
    "Options": [
                { "Value": "State", "Description": "The variable describes the state vector." },
                { "Value": "Action", "Description": "The variable describes the action vector." }
               ],
    "Description": "Indicates if the variable belongs to the state or action vector."
   },
   { 
    "Name": [ "Parameter Space" ],
    "Type": "std::string",
    "Options": [
                { "Value": "Continuous", "Description": "The variable is continuous within the [Lower Bound, Upper Bound] segment." },
                { "Value": "Discrete", "Description": "The variable is discrete within the [Lower Bound, Upper Bound] segment, uniformly discretized in intervals given by the variable's granularity." },
                { "Value": "Custom", "Description": "The variable is discrete, with user-defined values given in the parameter vector." }
               ],
    "Description": "Defines the parameter space of the variable."
   },
   {
    "Name": [ "Lower Bound" ],
    "Type": "double",
    "Description": "Indicates the lower bound of a continous/discrete variable."
   },
   {
    "Name": [ "Upper Bound" ],
    "Type": "double",
    "Description": "Indicates the lower bound of a continous/discrete variable."
   },
   {
    "Name": [ "Granularity" ],
    "Type": "double",
    "Description": "Indicates the distance between two intervals in a discrete variable."
   },
   {
    "Name": [ "Parameter Vector" ],
    "Type": "std::vector<double>",
    "Description": "Provides a custom-defined parameter space for the variable."
   }
 ],
 
  "Internal Settings":
 [
   {
    "Name": [ "Action Vector Size" ],
    "Type": "size_t",
    "Description": "Stores the number of parameters that make the action space."
   },
   {
    "Name": [ "State Vector Size" ],
    "Type": "size_t",
    "Description": "Stores the number of parameters that make the state space."
   },
   {
    "Name": [ "Action Vector Indexes" ],
    "Type": "std::vector<size_t>",
    "Description": "Stores the indexes of the number of variables that constitute the action vector."
   },
   {
    "Name": [ "State Vector Indexes" ],
    "Type": "std::vector<size_t>",
    "Description": "Stores the indexes of the number of variables that constitute the action vector."
   },
   {
    "Name": [ "Action Count" ],
    "Type": "size_t",
    "Description": "Indicates the number of possible distinct actions."
   },
   {
    "Name": [ "State Count" ],
    "Type": "size_t",
    "Description": "Indicates the number of possible distinct states."
   },
   {
    "Name": [ "Is Initialized" ],
    "Type": "bool",
    "Description": "Indicates the problem has already been initialized. If es, it cannot be changed afterward."
   }
 ],
 
 "Module Defaults":
 {
   "Initial State": [],
   "Is Initialized": false
 },
 
  "Variable Defaults":
 {
   "Lower Bound": Infinity,
   "Upper Bound": -Infinity,
   "Granularity": -1.0,
   "Parameter Vector": [ ]
 }

}
