{
 "Configuration Settings":
 [
   {
    "Name": [ "Environment Function" ],
    "Type": "std::function<void(korali::Sample&)>",
    "Description": "Function to initialize and run a new environment."
   },
   {
    "Name": [ "Actions Between Policy Updates" ],
    "Type": "size_t",
    "Description": "Number of actions to take before requesting a new policy."
   },
   {
    "Name": [ "Testing Frequency" ],
    "Type": "size_t",
    "Description": "Generation intervals at which the current policy will be tested."
   },
   {
    "Name": [ "Training Reward Threshold" ],
    "Type": "float",
    "Description": "Minimum value (r) of the episode's average training reward for a policy to be considered as candidate."
   },
   {
    "Name": [ "Policy Testing Episodes" ],
    "Type": "size_t",
    "Description": "Number of test episodes to run the policy (without noise) for, for which the average reward will serve to evaluate the reward termination criteria."
   },
   {
    "Name": [ "Custom Settings" ],
    "Type": "knlohmann::json",
    "Description": "Any used-defined settings required by the environment."
   },
   {
   "Name": [ "Observations",  "States" ],
   "Type": "std::vector<std::vector<std::vector<float>>>",
   "Description": "Vector containing the states of the observed trajectories."
   },
   {
   "Name": [ "Observations", "Actions" ],
   "Type": "std::vector<std::vector<std::vector<float>>>",
   "Description": "Vector containing the actions of the observed trajectories."
   },
   {
   "Name": [ "Observations", "Features" ],
   "Type": "std::vector<std::vector<std::vector<float>>>",
   "Description": "Vector containing the features corresponding to the observed state action pairs."
   }

 ],

 "Available Operations":
 [
  {
    "Name": "Run Training Episode",
    "Description": "Runs the environment and receives the state and rewards and provides training actions (policy + exploratory noise)for an entire episode.",
    "Function": "runTrainingEpisode"
  },
  {
    "Name": "Run Testing Episode",
    "Description": "Runs the environment and receives the state and rewards and provides testing actions (policy only) for an entire episode.",
    "Function": "runTestingEpisode"
  }
 ],
 
 "Compatible Solvers": [ "Agent" ],
 
 "Variables Configuration":
 [
   { 
    "Name": [ "Type" ],
    "Type": "std::string",
    "Options": [
                { "Value": "State", "Description": "The variable describes the state vector." },
                { "Value": "Action", "Description": "The variable describes the action vector." }
               ],
    "Description": "Indicates if the variable belongs to the state or action vector."
   }
 ],
 
  "Internal Settings":
 [
   {
    "Name": [ "Action Vector Size" ],
    "Type": "size_t",
    "Description": "Stores the number of parameters that make the action space."
   },
   {
    "Name": [ "State Vector Size" ],
    "Type": "size_t",
    "Description": "Stores the number of parameters that make the state space."
   },
   {
    "Name": [ "Action Vector Indexes" ],
    "Type": "std::vector<size_t>",
    "Description": "Stores the indexes of the number of variables that constitute the action vector."
   },
   {
    "Name": [ "State Vector Indexes" ],
    "Type": "std::vector<size_t>",
    "Description": "Stores the indexes of the number of variables that constitute the action vector."
   },
   {
    "Name": [ "Number Observed Trajectories" ],
    "Type": "size_t",
    "Description": "Stores the number of observed trajectories."
   },
   {
    "Name": [ "Feature Vector Size" ],
    "Type": "size_t",
    "Description": "The number of features that are observed to compute the reward."
   },
   {
    "Name": [ "Total Observed State Action Pairs" ],
    "Type": "size_t",
    "Description": "The total number of observed state action pairs."
   }
 ],
 
 "Module Defaults":
 {
   "Testing Frequency": 0,
   "Policy Testing Episodes": 5,
   "Actions Between Policy Updates": 0,
   "Custom Settings": {}
 },
 
  "Variable Defaults":
 {
   "Type": "State"
 }

}
