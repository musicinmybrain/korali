#include "modules/problem/learning/learning.hpp"

__startNamespace__;

void __className__::initialize()
{
  // Checking batch size
  if (_maxTimesteps == 0) KORALI_LOG_ERROR("Need at least one timestep: %lu.\n", _maxTimesteps);
  if (_inputSize == 0) KORALI_LOG_ERROR("Empty input vector size provided.\n");
}

void __className__::verifyData()
{
  // Checking for empty input and solution data
  if (_inputData.size() == 0) KORALI_LOG_ERROR("Empty input dataset provided.\n");
  // Checking that all timestep entries have the correct size
  for (size_t b = 0; b < _inputData.size(); b++)
  {
    if (_inputData[b].size() > _maxTimesteps)
      KORALI_LOG_ERROR("More timesteps (%lu) provided in batch %lu than max specified in the configuration (%lu).\n", _inputData[b].size(), b, _maxTimesteps);

    // Checking that all batch entries have the correct size
    for (size_t t = 0; t < _inputData[b].size(); t++)
      if (_inputData[b][t].size() != _inputSize)
        KORALI_LOG_ERROR("InputData[%zu][%zu].size() = %lu, is inconsistent with specified input size e['Problem']['Input']['Size'] = %lu.\n", b, t, _inputData[b][t].size(), _inputSize);
  }
}

__moduleAutoCode__;

__endNamespace__;
