#include "modules/problem/learning/supervisedLearning/supervisedLearning.hpp"

__startNamespace__;

void __className__::initialize()
{
  Learning::initialize();
  if (_trainingBatchSize == 0) KORALI_LOG_ERROR("Empty input batch provided.\n");
  if (_solutionSize == 0) KORALI_LOG_ERROR("Empty solution vector size provided.\n");
}

void __className__::verifyData()
{
  // Checking for empty input and solution data
  Learning::verifyData();
  if (_solutionData.size() == 0) KORALI_LOG_ERROR("Empty solution dataset provided.\n");
  // Checking that all timestep entries have the correct size
  // Checking batch size for solution data
  if (_inputData.size() != _solutionData.size())
    KORALI_LOG_ERROR("The provided number of training targets (%lu) is different than the number of training samples (%lu).\n", _solutionData.size(), _inputData.size());

  // Checking that all solution batch entries have the correct size
  for (size_t b = 0; b < _solutionData.size(); b++)
    if (_solutionData[b].size() != _solutionSize)
      KORALI_LOG_ERROR("Solution vector size of batch %lu is inconsistent. Size: %lu - Expected: %lu.\n", b, _solutionData[b].size(), _solutionSize);
}

__moduleAutoCode__;

__endNamespace__;
