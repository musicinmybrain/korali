#ifndef _KORALI_MODULE_HPP_
#define _KORALI_MODULE_HPP_

#include "auxiliars/json.hpp"
#include "auxiliars/logger.hpp"
#include "auxiliars/math.hpp"

namespace korali {

class Engine;

class Module
{
 public:

  std::string _type;
  std::vector<std::string> _terminationCriteria;
  korali::Engine* _k;

  Module* getModule(nlohmann::json& js);

  virtual void initialize() { }
  virtual void finalize() { }

  virtual std::string getType() { return _type; };
  virtual bool checkTermination() { return false; };
  virtual void getConfiguration(nlohmann::json& js) {};
  virtual void setConfiguration(nlohmann::json& js) {};
};

} // namespace korali

#endif // _KORALI_MODULE_HPP_

