#include "conduit/simple/simple.hpp"
#include "engine/engine.hpp"
#include "problem/problem.hpp"
#include "solver/solver.hpp"


void korali::conduit::Simple::processSample(korali::Sample& sample)
{
 _modelEvaluationCount++;

 __profiler["Timelines"]["Worker 0"]["Timestamp"] += std::chrono::duration<double>(std::chrono::high_resolution_clock::now()-_startTime).count();
 __profiler["Timelines"]["Worker 0"]["Segment Id"] += sample["Sample Id"];

 _k->_problem->runOperation(sample["Operation"], sample);

 __profiler["Timelines"]["Worker 0"]["Timestamp"] += std::chrono::duration<double>(std::chrono::high_resolution_clock::now()-_startTime).count();
 __profiler["Timelines"]["Worker 0"]["Segment Id"] += -1;
}

