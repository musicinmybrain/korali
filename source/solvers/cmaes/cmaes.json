{
 "Module Name": "Covariance Matrix Adaptation Evolution Strategy",
 "Module Alias": "CMAES",
 
 "Module Configuration": 
 [
   {
    "Name": "Sample Count",
    "Type": "Unsigned Integer",
    "Description": "Specifies the number of samples to evaluate per generation (preferably 4+3*log(N) number of variables)."
   },
   {
    "Name": "Mu Value",
    "Default": "_sampleCount*0.5",
    "Type": "Unsigned Integer",
    "Description": "Number of best samples used to update the covariance matrix and the mean."
   },
   {
    "Name": "Mu Type",
    "Default": "Logarithmic",
    "Type": "String",
    "Description": "Weights given to the Mu best values to update the covariance matrix and the mean."
   },
   {
    "Name": "Initial Sigma Cumulation Factor",
    "Default": "-1.0",
    "Type": "Real",
    "Description": "Controls the learning rate of the conjugate evolution path."
   },
   {
    "Name": "Initial Damp Factor",
    "Default": "-1.0",
    "Type": "Real",
    "Description": "Controls the updates of the covariance matrix scaling factor."
   },
   {
    "Name": "Is Sigma Bounded",
    "Default": "false",
    "Type": "Boolean",
    "Description": "Sets an upper bound for the covariance matrix scaling factor. The upper bound is given by the average of the initial standard deviation of the variables"
   },
   {
    "Name": "Initial Cumulative Covariance",
    "Default": "-1.0",
    "Type": "Real",
    "Description": "Controls the learning rate of the evolution path for the covariance update (must be in (0,1])."
   },
   {
    "Name": "Is Diagonal",
    "Default": "false",
    "Type": "Boolean",
    "Description": "Covariance matrix updates will be optimized for diagonal matrices."
   },
   {
    "Name": "Viability Sample Count",
    "Default": "2",
    "Type": "Unsigned Integer",
    "Description": "Specifies the number of samples per generation during the viability regime, i.e. during the search for a mean vector not violating the constraints."
   },
   {
    "Name": "Viability Mu",
    "Default": "2",
    "Type": "Unsigned Integer",
    "Description": "Number of best samples used to update the covariance matrix and the mean during the viability regime."
   },
   {
    "Name": "Max Covariance Matrix Corrections",
    "Default": "1e6",
    "Type": "Unsigned Integer",
    "Description": "Max number of covairance matrix adaptions per generation during the constraint handling loop."
   },
   {
    "Name": "Target Success Rate",
    "Default": "0.1818",
    "Type": "Real",
    "Description": "Controls the updates of the covariance matrix scaling factor during the viability regime."
   },
   {
    "Name": "Covariance Matrix Adaption Strength",
    "Default": "0.1",
    "Type": "Real",
    "Description": "Controls the covariane matrix adaption strength if samples violate constraints."
   },
   {
    "Name": "Normal Vector Learning Rate",
    "Default": "-1.0",
    "Type": "Real",
    "Description": "Learning rate of constraint normal vectors (must be in (0, 1]), or -1 to disable."
   },
   {
    "Name": "Global Success Learning Rate",
    "Default": "0.2",
    "Type": "Real",
    "Description": "Learning rate of success probability of objective function improvements. Required for covariance matrix scaling factor update during viability regime."
   }
 ],
 
 "Termination Criteria":
 [
   {
    "Name": "Max Generations",
    "Type": "Unsigned Integer",
    "Description": "Determines how many solver generations to run before stopping execution. Execution can be resumed at a later moment."
   },
   {
    "Name": "Max Model Evaluations",
    "Type": "Unsigned Integer",
    "Description": "Determines how many computational model evaluations to run before stopping execution. Execution can be resumed at a later moment."
   },
   {
    "Name": "Max Infeasible Resamplings",
    "Type": "Unsigned Integer",
    "Description": "Maximum number of resamplings per candidate per generation if sample is outside of Lower and Upper Bound."
   },
   {
    "Name": "Max Condition Covariance Matrix",
    "Type": "Real",
    "Description": "Specifies the maximum condition of the covariance matrix."
   },
   {
    "Name": "Min Fitness",
    "Type": "Real",
    "Description": "Specifies the minimum target fitness to stop minimization."
   },
   {
    "Name": "Max Fitness",
    "Type": "Real",
    "Description": "Specifies the maximum target fitness to stop maximization."
   },
   {
    "Name": "Min Fitness Diff Threshold",
    "Type": "Real",
    "Description": "Specifies the minimum fitness differential between two consecutive generations before stopping execution."
   },
   {
    "Name": "Min Standard Deviation",
    "Type": "Real",
    "Description": "Specifies the minimal standard deviation for any dimension in any proposed sample."
   },
   {
    "Name": "Max Standard Deviation",
    "Type": "Real",
    "Description": "Specifies the maximal standard deviation for any dimension in any proposed sample."
   },
   {
    "Name": "Min Standard Deviation Step Factor",
    "Type": "Real",
    "Description": "Specifies a scaling factor under which the standard deviation does not change in the direction of the eigenvectors."
   }
 ],
 
 "Variables Configuration": 
 [
   {
    "Name": "Lower Bound",
    "Type": "Real",
    "Default": "NAN",
    "Description": "Specifies the lower bound for the variable's value. Korali will not generate samples for which this variable falls below the specified minimum."
   },
   {
    "Name": "Upper Bound",
    "Type": "Real",
    "Default": "NAN",
    "Description": "Specifies the upper bound for the variable's value. Korali will not generate samples for which this variable falls below the specified maximum."
   },
   {
    "Name": "Initial Mean",
    "Type": "Real",
    "Default": "(_upperBound + _lowerBound)*0.5",
    "Description": "Defines the initial mean for the proposal distribution. This value must be defined between the variable's Mininum and Maximum settings By default, Korali sets this value in the center of the domain."
   },
   {
    "Name": "Initial Standard Deviation",
    "Type": "Real",
    "Default": "(_upperBound - _lowerBound)*0.3",
    "Description": "Defines the initial standard deviation of the proposal distribution for a variable. By default, Korali sets this value to 30% of the domain width."
   },
   {
    "Name": "Minimum Standard Deviation Changes",
    "Type": "Real",
    "Default": "0.0",
    "Description": "Defines a lower bound for the standard deviation updates of the proposal distribution for a variable. Korali increases the scaling factor $\\sigma$ if this value is undershot. By default, Korali sets this value to 0.0 (inactive)."
   },
   {
    "Name": "Is Discrete",
    "Type": "Boolean",
    "Default": "false",
    "Description": "Specifies if the variable can only take discrete values within the range of the lower and upper bound."
   },
   {
    "Name": "Granularity",
    "Type": "Real",
    "Default": "0.0",
    "Description": "Specifies the granulatiry of a discrete variable, a granularity of 1.0 means that the variable can only take values in (.., -1.0, 0.0, +1.0, +2.0, ..) where the levels are set symmetric around the initial mean (here 0.0)."
   }
 ],
 
 "Internal Settings": 
 [
   {
    "Name": "Is Viability Regime",
    "Type": "Boolean",
    "Description": "True if mean is outside feasible domain."
   },
   {
    "Name": "Fitness Vector",
    "Type": "(Array of) Real",
    "Description": "Objection Function Values."
   },
   {
    "Name": "Previous Fitness Vector",
    "Type": "(Array of) Real",
    "Description": "Objection Function Values from previous evaluations."
   },
   {
    "Name": "Current Sample Count",
    "Type": "Unsigned Integer",
    "Description": "Number of samples active ( _s or _via_s )."
   },
   {
    "Name": "Current Sample Mu",
    "Type": "Unsigned Integer",
    "Description": "Active mu number ( _mu or _mu_s )."
   },
   {
    "Name": "Mu Weights",
    "Type": "(Array of) Real",
    "Description": "Weights for each of the Mu samples."
   },
   {
    "Name": "Effective Mu",
    "Type": "Real",
    "Description": "Variance effective selection mass."
   },
   {
    "Name": "Sigma Cumulation Factor",
    "Type": "Real",
    "Description": "Increment for sigma, default calculated from muEffective and dimension (must be in (0,1) )."
   },
   {
    "Name": "Damp Factor",
    "Type": "Real",
    "Description": "Dampening parameter controls step size adaption (must be in (0,1) )."
   },
   {
    "Name": "Cumulative Covariance",
    "Type": "Real",
    "Description": "Default calculated from dimension."
   },
   {
    "Name": "Chi Square Number",
    "Type": "Real",
    "Description": "Expectation of $||N(0,I)||^2$."
   },
   {
    "Name": "Covariance Eigenvalue Evaluation Frequency",
    "Type": "Unsigned Integer",
    "Description": "Establishes how frequently the eigenvalues are updated."
   },
   {
    "Name": "Sigma",
    "Type": "Real",
    "Description": "Determines the step size."
   },
   {
    "Name": "Trace",
    "Type": "Real",
    "Description": "Variable to init sigma (or set upper bound)."
   },
   {
    "Name": "Sample Population",
    "Type": "(Array of) Real",
    "Description": "Sample coordinate information."
   },
   {
    "Name": "Sample Candidates",
    "Type": "(Array of) Real",
    "Description": "Sample Candidates to evaluate."
   },
   {
    "Name": "Is Initialized Sample",
    "Type": "(Array of) Real",
    "Description": "Determines which samples are initialized."
   },
   {
    "Name": "Finished Sample Count",
    "Type": "Unsigned Integer",
    "Description": "Counter of evaluated samples to terminate evaluation."
   },
   {
    "Name": "Current Best Value",
    "Type": "Real",
    "Description": "Best value from current generation."
   },
   {
    "Name": "Current Best Coordinates",
    "Type": "(Array of) Real",
    "Description": "Coordinates of the best sample ever."
   },
   {
    "Name": "Best Ever Coordinates",
    "Type": "(Array of) Real",
    "Description": "Coordinates of the best sample ever."
   },
   {
    "Name": "Previous Best Value",
    "Type": "Real",
    "Description": "Best fitness from previous generation."
   },
   {
    "Name": "Best Sample Index",
    "Type": "Unsigned Integer",
    "Description": "Index of the best sample so far."
   },
   {
    "Name": "Best Ever Value",
    "Type": "Real",
    "Description": "Value of the best sample so far."
   },
   {
    "Name": "Previous Best Ever Value",
    "Type": "Real",
    "Description": "Value of the previous best sample ever."
   },
   {
    "Name": "Sorting Index",
    "Type": "(Array of) Unsigned Integer",
    "Description": "Sorted indeces of samples according to their fitness value."
   },
   {
    "Name": "Covariance Matrix",
    "Type": "(Array of) Real",
    "Description": "(Unscaled) covariance Matrix of proposal distribution."
   },
   {
    "Name": "Auxiliar Covariance Matrix",
    "Type": "(Array of) Real",
    "Description": "Temporary Storage for Covariance Matrix."
   },
   {
    "Name": "Covariance Eigenvector Matrix",
    "Type": "(Array of) Real",
    "Description": "Matrix with eigenvectors in columns."
   },
   {
    "Name": "Auxiliar Covariance Eigenvector Matrix",
    "Type": "(Array of) Real",
    "Description": "Temporary Storage for Matrix with eigenvectors in columns."
   },
   {
    "Name": "Axis Lengths",
    "Type": "(Array of) Real",
    "Description": "Axis lengths (sqrt(Evals))"
   },
   {
    "Name": "Temporary Axis Lengths",
    "Type": "(Array of) Real",
    "Description": "Temporary storage for Axis lengths."
   },
   {
    "Name": "Random Number Storage",
    "Type": "(Array of) Real",
    "Description": "Temporary storage for Random Number Generation."
   },
   {
    "Name": "BDZ Matrix",
    "Type": "(Array of) Real",
    "Description": "Temporary storage to hold B*D*randn()."
   },
   {
    "Name": "Temporary BDZ Matrix",
    "Type": "(Array of) Real",
    "Description": "Auxiliar Temporary storage to hold B*D*randn()."
   },
   {
    "Name": "Current Mean",
    "Type": "(Array of) Real",
    "Description": "Current Mean Distribution Proposal."
   },
   {
    "Name": "Previous Mean",
    "Type": "(Array of) Real",
    "Description": "Mean parent on previous generation."
   },
   {
    "Name": "Mean Update",
    "Type": "(Array of) Real",
    "Description": "Update differential from previous to current means."
   },
   {
    "Name": "Evolution Path",
    "Type": "(Array of) Real",
    "Description": "Evolution path for Covariance Matrix update."
   },
   {
    "Name": "Conjugate Evolution Path",
    "Type": "(Array of) Real",
    "Description": "Conjugate evolution path for Covariance Matrix update for sigma update."
   },
   {
    "Name": "Conjugate Evolution Path L2 Norm",
    "Type": "Real",
    "Description": "L2 Norm of the conjugate evolution path."
   },
   {
    "Name": "Infeasible Sample Count",
    "Type": "Unsigned Integer",
    "Description": "Keeps count of the number of function evaluations so far."
   },
   {
    "Name": "Maximum Diagonal Covariance Matrix Element",
    "Type": "Real",
    "Description": "Maximum diagonal element of the Covariance Matrix."
   },
   {
    "Name": "Minimum Diagonal Covariance Matrix Element",
    "Type": "Real",
    "Description": "Minimum diagonal element of the Covariance Matrix."
   },
   {
    "Name": "Maximum Covariance Eigenvalue",
    "Type": "Real",
    "Description": "Maximum Covariance Matrix Eigenvalue."
   },
   {
    "Name": "Minimum Covariance Eigenvalue",
    "Type": "Real",
    "Description": "Minimum Covariance Matrix Eigenvalue."
   },
   {
    "Name": "Is Eigensystem Updated",
    "Type": "Boolean",
    "Description": "Flag determining if the covariance eigensystem is up to date."
   },
   {
    "Name": "Viability Indicator",
    "Type": "(Array of) (Array of) Boolean",
    "Description": "Evaluation of each constraint for each sample."
   },
   {
    "Name": "Constraints Defined",
    "Type": "Boolean",
    "Description": "True if the number of constraints is higher than zero."
   },
   {
    "Name": "Covariance Matrix Adaption Factor",
    "Type": "Real",
    "Description": "This is the $\beta$ factor that indicates how fast the covariance matrix is adapted."
   },
   {
    "Name": "Best Valid Sample",
    "Type": "Signed Integer",
    "Description": "Best sample without constraint violations (otherwise -1)."
   },
   {
    "Name": "Global Success Rate",
    "Type": "Real",
    "Description": "Estimated Global Success Rate, required for calibration of covariance matrix scaling factor updates."
   },
   {
    "Name": "Viability Function Value",
    "Type": "Real",
    "Description": "Viability Function Value."
   },
   {
    "Name": "Resampled Parameter Count",
    "Type": "Unsigned Integer",
    "Description": "Number of resampled parameters due constraint violation."
   },
   {
    "Name": "Covariance Matrix Adaptation Count",
    "Type": "Unsigned Integer",
    "Description": "Number of Covariance Matrix Adaptations."
   },
   {
    "Name": "Constraint Evaluation Count",
    "Type": "Unsigned Integer",
    "Description": "Number of Covariance Matrix Adaptations."
   },
   {
    "Name": "Viability Boundaries",
    "Type": "(Array of) Real",
    "Description": "Viability Boundaries."
   },
   {
    "Name": "Viability Improvement",
    "Type": "(Array of) Boolean",
    "Description": "Sample evaluations larger than fviability."
   },
   {
    "Name": "Maximum Violation Count",
    "Type": "Unsigned Integer",
    "Description": "Maximal amount of constraint violations."
   },
   {
    "Name": "Sample Constraint Violation Counts",
    "Type": "(Array of) Unsigned Integer",
    "Description": "Maximal amount of constraint violations."
   },
   {
    "Name": "Constraint Evaluations",
    "Type": "(Array of) (Array of) Real",
    "Description": "Constraint Evaluations $$e$$."
   },
   {
    "Name": "Normal Constraint Approximation",
    "Type": "(Array of) (Array of) Real",
    "Description": "Normal approximation of constraints."
   },
   {
    "Name": "Best Constraint Evaluations",
    "Type": "(Array of) Real",
    "Description": "Constraint evaluations for best ever."
   },
   {
    "Name": "Has Discrete Variables",
    "Type": "Boolean",
    "Description": "Flag indicating if at least one of the variables is discrete."
   },
   {
    "Name": "Discrete Mutations",
    "Type": "(Array of) Real",
    "Description": "Vector storing discrete mutations, required for covariance matrix update."
   },
   {
    "Name": "Number Of Discrete Mutations",
    "Type": "Unsigned Integer",
    "Description": "Number of discrete mutations in current generation."
   },
   {
    "Name": "Granularity",
    "Type": "(Array of) Real",
    "Description": "Flag determining if the covariance eigensystem is up to date."
   },
   {
    "Name": "Number Masking Matrix Entries",
    "Type": "Unsigned Integer",
    "Description": "Number of nonzero entries on diagonal in Masking Matrix."
   },
   {
    "Name": "Masking Matrix",
    "Type": "(Array of) Real",
    "Description": "Diagonal Matrix signifying where an integer mutation may be conducted."
   },
   {
    "Name": "Masking Matrix Sigma",
    "Type": "(Array of) Real",
    "Description": "Sigma of the Masking Matrix."
   },
   {
    "Name": "Chi Square Number Discrete Mutations",
    "Type": "Real",
    "Description": "Expectation of $||N(0,I^S)||^2$ for discrete mutations."
   }
 ]
}
