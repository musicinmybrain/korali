{
 "Type": "Solver",
 "Name": "Markov Chain Monte Carlo",
 "Alias": "MCMC",
 "C++ Class": "MCMC",
 
 "Configuration Settings": 
 [
   {
    "Name": [ "Burn In" ],
    "Type": "size_t",
    "Default": "0",
    "Description": "Specifies the number of preliminary MCMC steps before samples are being drawn. This may reduce effects from improper initialization."
   },
   {
    "Name": [ "Rejection Levels" ],
    "Type": "size_t",
    "Default": "1",
    "Description": "Controls the number of accept-reject stages per MCMC step (by default, this value is set 1, for values greater 1 the delajed rejection algorithm is active."
   },
   {
    "Name": [ "Use Adaptive Sampling" ],
    "Type": "bool",
    "Default": "false",
    "Description": "Specifies if covariance matrix of the proposal distribution is calculated from the samples."
   },
   {
    "Name": [ "Non Adaption Period" ],
    "Type": "size_t",
    "Default": "0",
    "Description": "Number of steps (after Burn In steps) during which the initial covariance is used instead of the Chain Covariance. If 0 (default) is specified, this value is calibrated as $5%$ of the Max Chain Length (only relevant for Adaptive Sampling)."
   },
   {
    "Name": [ "Chain Covariance Scaling" ],
    "Type": "double",
    "Default": "1.0",
    "Description": "Learning rate of the Chain Covariance (only relevant for Adaptive Sampling)."
   }
 ],
 
 "Termination Criteria":
 [
   {
    "Name": [ "Max Chain Length" ],
    "Type": "size_t",
    "Default": "5000",
    "Criteria": "_databaseEntryCount >= _maxChainLength",
    "Description": "Maximum number of samples to evaluate for the MCMC chain."
   }
 ],
 
 "Variables Configuration": 
 [
   {
    "Name": [ "Initial Mean" ],
    "Type": "double",
    "Description": "Specifies the Initial Mean of the proposal distribution."
   },
   {
    "Name": [ "Initial Standard Deviation" ],
    "Type": "double",
    "Description": "Specifies the Standard Deviation for each variable. The proposal distribution is defined through a covariance matrix with the variance of the variables in its diagonal."
   }
 ],
 
 "Internal Settings": 
 [
   {
    "Name": [ "Cholesky Decomposition Covariance" ],
    "Type": "std::vector<double>",
    "Description": "Cholesky Decomposition of Covariance for sampling (using a lower triangular matrix, with rest zeros)."
   },
   {
    "Name": [ "Cholesky Decomposition Chain Covariance" ],
    "Type": "std::vector<double>",
    "Description": "Chain Cholesky Decomposition of Covariance for sampling (using a lower triangular matrix, with rest zeros)."
   },
   {
    "Name": [ "Chain Leader" ],
    "Type": "std::vector<double>",
    "Description": "Variables of the newest sample in the Markov chain."
   },
   {
    "Name": [ "Chain Leader LogLikelihood" ],
    "Type": "double",
    "Description": "The logLikelihood of the newest sample in the Markov chain."
   },
   {
    "Name": [ "Chain Candidate" ],
    "Type": "std::vector<double>",
    "Description": "Candidate variables to be accepted or rejected after comparison with the Chain Leader."
   },
   {
    "Name": [ "Chain Candidates LogLikelihoods" ],
    "Type": "std::vector<double>",
    "Description": "The loglikelihoods of the Chain Candidate Parameters."
   },
   {
    "Name": [ "Chain Candidates LogPriors" ],
    "Type": "std::vector<double>",
    "Description": "The logpriors of the Chain Candidates Parameters."
   },
   {
    "Name": [ "Rejection Alphas" ],
    "Type": "std::vector<double>",
    "Description": "Placeholder for recursive calculation of delayed rejection schemes."
   },
   {
    "Name": [ "Acceptance Rate" ],
    "Type": "double",
    "Description": "Ratio proposed to accepted samples (including Burn In period)."
   },
   {
    "Name": [ "Current Rejection Count" ],
    "Type": "size_t",
    "Description": "Number of rejections in the current generation (only relevant for delajed rejection algorithm)."
   },
   {
    "Name": [ "Acceptance Count" ],
    "Type": "size_t",
    "Description": "Number of accepted samples (including Burn In period)."
   },
   {
    "Name": [ "Proposed Sample Count" ],
    "Type": "size_t",
    "Description": "Number of proposed samples."
   },
   {
    "Name": [ "Database Entry Count" ],
    "Type": "size_t",
    "Description": "Number of samples stored in the database after Burn In steps."
   },
   {
    "Name": [ "Sample Database" ],
    "Type": "std::vector<double>",
    "Description": "Parameters generated by MCMC and stored in the database."
   },
   {
    "Name": [ "Sample Fitness Database" ],
    "Type": "std::vector<double>",
    "Description": "Fitness associated with the parameters stored in the database."
   },
   {
    "Name": [ "Chain Mean" ],
    "Type": "std::vector<double>",
    "Description": "Mean of Markov Chain calculated from samples in Database."
   },
   {
    "Name": [ "Chain Covariance Placeholder" ],
    "Type": "std::vector<double>",
    "Description": "Placeholder for chain covariance calculation."
   },
   {
    "Name": [ "Chain Covariance" ],
    "Type": "std::vector<double>",
    "Description": "Chain Covariance calculated from samples in Database."
   },
   {
    "Name": [ "Chain Length" ],
    "Type": "size_t",
    "Description": "Current Chain Length (including Burn In)."
   }
 ]
}
