#include "korali.hpp"

Korali::Distribution::Exponential::Exponential()
{

}

void Korali::Distribution::Exponential::initialize()
{
 Korali::Distribution::Base::initialize();
}

void Korali::Distribution::Exponential::finalize()
{
 Korali::Distribution::Base::finalize();
}

double Korali::Distribution::Exponential::getDensity(double x)
{
 return gsl_ran_exponential_pdf(x-_location, _mean);
}

double Korali::Distribution::Exponential::getLogDensity(double x)
{
 if (x-_location < 0) return -INFINITY; return - log(_mean) - (x-_location)/_mean;
}

double Korali::Distribution::Exponential::getRandomNumber()
{
 return _location + gsl_ran_exponential(_range, _mean);
}

void Korali::Distribution::Exponential::updateDistribution()
{
 _aux = 0.0;
}

void Korali::Distribution::Exponential::updateConditionals(const std::vector<std::string>& propertyNames, const std::vector<double>& propertyValues)
{
 // Check for conditional properties

 updateDistribution();
}

