#include "korali.hpp"

Korali::Distribution::Geometric::Geometric()
{
}

void Korali::Distribution::Geometric::initialize(Korali::Problem::Base* problem)
{
 Korali::Distribution::Base::initialize(problem);
 bool hasConditionals = false;

 // Check for conditional properties

 if (hasConditionals == false) updateDistribution();
}

void Korali::Distribution::Geometric::finalize()
{
 Korali::Distribution::Base::finalize();
}

double Korali::Distribution::Geometric::getDensity(double x)
{
 return gsl_ran_geometric_pdf((int)x, _successProbability);
}

double Korali::Distribution::Geometric::getLogDensity(double x)
{
 return log(_successProbability) + (x-1)*log(1.0-_successProbability);
}

double Korali::Distribution::Geometric::getRandomNumber()
{
 return gsl_ran_geometric(_range, _successProbability);
}

void Korali::Distribution::Geometric::updateDistribution()
{
 _aux = 0.0;
}

void Korali::Distribution::Geometric::updateConditionals(const std::vector<double>& sample)
{
 Korali::Distribution::Base::updateConditionals(sample);
 updateDistribution();
}
