#include "korali.hpp"

void Korali::Problem::Sampling::initialize()
{
 if (_k->_modelType != "Direct") koraliError("Sampling problems require defining a direct computational model. Used: %s\n", _k->_modelType.c_str());
 if (_k->_constraints.size() > 0) koraliError("Sampling problems do not allow constraint definitions.\n");
}

void Korali::Problem::Sampling::finalize()
{

}

double Korali::Problem::Sampling::evaluateFitness(std::vector<double> sample, size_t sampleId)
{
 // Creating model data.
 Korali::Model::Direct data;
 data._sampleId = sampleId;
 data._variables = sample;

 // Executing Model
 _k->_directModel(data);

 return data._result;
}

double Korali::Problem::Sampling::evaluateLogPrior(double* sample)
{
  return 0.0;
}
