#ifndef _KORALI_PROBLEM_HIERARCHICALPSI_HPP_
#define _KORALI_PROBLEM_HIERARCHICALPSI_HPP_

#include "problems/base.hpp"

namespace Korali { namespace Problem {

class HierarchicalPsi : public Korali::Problem::Base
{
 private:

 std::vector<nlohmann::json> _subProblemsJson;

 public:

 void runModel(std::vector<double>, size_t sampleId) override;

 size_t getSampleSize() override;
 Korali::Variable* getVariable(size_t variableId) override;

 double evaluateSampleFitness() override;
 double evaluateSampleLogPrior(double* sample) override;

 void initialize() override;
 void finalize() override;

 void getConfiguration(nlohmann::json&) override;
 void setConfiguration(nlohmann::json&) override;
};

} } // namespace Korali::Problem


#endif // _KORALI_PROBLEM_HIERARCHICALPSI_HPP_
