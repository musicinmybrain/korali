#ifndef _KORALI_PROBLEM_THETA_HPP_
#define _KORALI_PROBLEM_THETA_HPP_

#include "problems/evaluation/bayesian/base.hpp"
#include "problems/evaluation/bayesian/hierarchical/psi/psi.hpp"

namespace Korali { namespace Problem { namespace Evaluation { namespace Bayesian { namespace Hierarchical {

class Theta : public Korali::Problem::Evaluation::Bayesian::Hierarchical::Base
{
 private:

 Korali::Engine* _psiProblemEngine;
 size_t _psiVariableCount;
 size_t _psiProblemSampleCount;
 std::vector<std::vector<double>> _psiProblemSampleCoordinates;
 std::vector<double> _psiProblemSampleLogLikelihoods;
 std::vector<double> _psiProblemSampleLogPriors;
 Korali::Problem::Evaluation::Bayesian::Hierarchical::Psi* _psiProblem;

 Korali::Engine* _thetaProblemEngine;
 size_t _thetaVariableCount;
 size_t _thetaProblemSampleCount;
 std::vector<std::vector<double>> _thetaProblemSampleCoordinates;
 std::vector<double> _thetaProblemSampleLogLikelihoods;
 std::vector<double> _thetaProblemSampleLogPriors;

 std::vector<double> _precomputedLogDenominator;

 public:

 void evaluateThetaLikelihood(Korali::Sample& sample);
 void evaluateLogLikelihood(Korali::Sample& sample) override;
 void initialize() override;
};

} } } } } // namespace Korali::Problem::Evaluation::Bayesian::Hierarchical


#endif // _KORALI_PROBLEM_THETA_HPP_
