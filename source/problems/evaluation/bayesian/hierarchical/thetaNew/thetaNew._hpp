#ifndef _KORALI_PROBLEM_THETANEW_HPP_
#define _KORALI_PROBLEM_THETANEW_HPP_

#include "problems/evaluation/bayesian/hierarchical/base.hpp"
#include "problems/evaluation/bayesian/hierarchical/psi/psi.hpp"

namespace korali { namespace problem { namespace Evaluation { namespace Bayesian { namespace Hierarchical {

class ThetaNew : public korali::problem::Evaluation::Bayesian::Hierarchical::Base
{
 private:

 korali::Engine* _psiEngine;
 size_t _psiProblemSampleCount;

 std::vector<std::vector<double>> _psiProblemSampleCoordinates;
 std::vector<double> _psiProblemSampleLogLikelihoods;
 std::vector<double> _psiProblemSampleLogPriors;

 public:

 void evaluateLogLikelihood(korali::Sample& sample) override;
 void evaluateThetaLikelihood(korali::Sample& sample);
 void initialize() override;
};

} } } } } // namespace korali::problem::Evaluation::Bayesian::Hierarchical


#endif // _KORALI_PROBLEM_THETANEW_HPP_
