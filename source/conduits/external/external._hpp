#ifndef _KORALI_CONDUIT_EXTERNAL_HPP_
#define _KORALI_CONDUIT_EXTERNAL_HPP_

#include "conduits/base.hpp"
#include "auxiliars/json.hpp"
#include <sys/types.h>
#include <unistd.h>
#include <queue>
#include <vector>
#include <map>

namespace korali { namespace conduit {

class External : public korali::conduit::Base {

 private:

 public:

 std::vector<std::vector<int>> _pipeDescriptors;
 std::queue<int> _launcherQueue;

 std::map<int, size_t> _launcherIdToSamplerIdMap;
 std::map<int, pid_t> _launcherIdToProcessIdMap;
 std::map<pid_t, int> _processIdMapToLauncherIdMap;

 void runModel(size_t modelId, korali::Sample& sample) override;
 void initialize() override;
 void finalize() override;

};
} } // namespace korali::Conduit

#endif // _KORALI_CONDUIT_EXTERNAL_HPP_
