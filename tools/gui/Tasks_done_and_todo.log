Mark Martori Lopez

Tuesday 14 April 2020

Tasks:

1- [Solved] Improved efficiency by merging functions printConfig and printVariables into printData.

2- [Semi-Solved] To Fix: Scrollbar doesnt adjust when inserting more rows than frame-height.

3- [Not Solved] "TO FINISH: Pass from one tab-variable1 to the next tab-variable2 the same information so we can have several variables with same content for same experiment."

4- [Solved] Add bottom to create the Config File.

5- [Solved] Current GOAL: Create a .config out of the options selected in an experiment.
The config should look like this:
{{solver},{problem},[{var1},{var2},{var3}]}

	Step 1: [Solved] Create a dictionary to store as keys the names of the entries and as values their inputs typed by the user.

	Step 2: [Solved] Create a function that is able to retrieve all the values from the entries.

	Step 3: [Solved] The function must retrieve the values from all the different frames when clicking the button 'Done!'.
	
	Step 4: [Solved] Retrieve also the type of Problem and Solver.

	Step 5: [Solved] Create the file and store it in the proper folder.


Step 6: [Semi-Solved] Structure the .config file.



-----------------------------------
Wednesday 8 April 2020

Tasks:

1- [Solved] To Fix: All entries get overwritten by the first one when typing something. Solved.

2- [Semi-Solved] To improve: functions printConfig and printVariables can be merged to make the code cleaner and shorter.

3- [Semi-Solved] To Fix: Scrollbar doesnt adjust when inserting more rows than frame-height. Not-Solved. To do so, task 2 must be solved.


4- [Not Solved] "TO FINISH: Pass from one tab-variable1 to the next tab-variable2 the same information so we can have several variables with same content for same experiment."

5- [Semi-solved] Current GOAL: Create a .config out of the options selected in an experiment.
The config should look like this:
{{solver},{problem},[{var1},{var2},{var3}]}

	Step 1: [Solved] Create a dictionary to store as keys the names of the entries and as values their inputs typed by the user.

	Step 2: [Solved] Create a function that is able to retrieve all the values from the entries.

	Step 3: [Not Solved] The function must retrieve the values from all the different frames when clicking the button 'Done!'. To solve this I need to reorganize the parameters passed between the functions in order to improve efficiency, to do so, task 2 must be solved.

----------------------------------------
Tuesday 7 April 2020

Tasks:
- Re-code the relationships between tabs in order to be able to delete them and add new ones in a logical order. Solved.

- Create a dictionary to facilitate passing frames globally. Semi-solved. It may need more options in the future.

- Create a new function: 
	def on_tab_selected(event):
	# Respond to an event and provides the curent selected tab.

- Fix the comunication between the tabs-variables and tabs-experiments in order to have several variables in one unique experiment. Solved.

- Fix deleteTab() function. Solved.
- Fix deleteVariable() function. Solved.


TO FINISH:
- Pass from one tab-variable1 to the next tab-variable2 the same information so we can have several variables with same content for same experiment. Not Solved yet.


TO START:
- Starting with next goal:

Create a .config out of the options selected in an experiment.
The config should look like this:
{{solver},{problem},[{var1},{var2},{var3}]}




